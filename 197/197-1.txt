/*
 * 예제 197-1 사물인터넷보드(wemos d1r1)에 openapi로 데이터를 받아오자!
 * 한국환경공단의 측정소별 실시간 미세먼지데이터 open api를 이용해보자!
 * 시리얼모니터에 결과를 깔끔하게 출력해보자!
 */
#include <ESP8266WiFi.h>
#include <ArduinoJson.h>

#ifndef STASSID
#define STASSID "~~~" //와이파이 검색했을때 뜨는 이름
#define STAPSK  "~~~" //패스워드
#endif

const char* ssid = STASSID;
const char* password = STAPSK;

const char* host = "apis.data.go.kr";
const int httpsPort = 80;
String yourkey = "~~~~";
String station_id = "서대문구";

WiFiClient client;
void setup() {
  Serial.begin(115200);
  Serial.println();
  Serial.print("connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  
  Serial.print("connecting to ");
  Serial.println(host);

  //클라이언트와 서버와 커넥트
  if (!client.connect(host, httpsPort)) {
    Serial.println("connection failed");
    return;
  }
                                                                                                                                         //%EC%A2%85%EB%A1%9C%EA%B5%AC
  String url = "/B552584/ArpltnInforInqireSvc/getMsrstnAcctoRltmMesureDnsty?serviceKey="+yourkey+"&returnType=json&numOfRows=1&stationName="+utf8(station_id)+"&dataTerm=DAILY";

  //사물인터넷보드에서 RSS서버로 보내는 요청!
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");

  //서버로부터 응답이 있을때까지 대기하겠다..
  //언제까지 기다려야하나요..?
  //timeout!
  unsigned long t = millis(); //생존시간
  while(1){
    if(client.available()) break;
    if(millis() - t > 10000) break;
  }

  //{"response":{"body":{"totalCount":23,"items":[{"so2Grade":"1","coFlag":null,"khaiValue":"116","so2Value":"0.004","coValue":"0.7","pm10Flag":null,"pm10Value":"66","o3Grade":"1","khaiGrade":"3","no2Flag":null,"no2Grade":"2","o3Flag":null,"so2Flag":null,"dataTime":"2020-12-28 19:00","coGrade":"1","no2Value":"0.043","pm10Grade":"2","o3Value":"0.018"}],"pageNo":1,"numOfRows":1},"header":{"resultMsg":"NORMAL_CODE","resultCode":"00"}}}

  //응답이 날라오는 부분!
  Serial.println("request sent");

  while(client.available()){
    String data = client.readStringUntil('\n'); //readline();
    if(data.indexOf("{\"response\"") != -1){
      //현재 하나의 line을 읽어왔는데 그 line이 {"response"이걸로 시작하냐?
      DynamicJsonDocument doc(768);
      deserializeJson(doc, data);

      JsonObject response_body = doc["response"]["body"];
      int response_body_totalCount = response_body["totalCount"]; // 23

      JsonObject response_body_items_0 = response_body["items"][0];
      String khaiValue = response_body_items_0["khaiValue"]; // "116"
      String so2Value = response_body_items_0["so2Value"]; // "0.004"
      String coValue = response_body_items_0["coValue"]; // "0.7"
      String pm10Value = response_body_items_0["pm10Value"]; // "66"
      String dataTime = response_body_items_0["dataTime"]; // "2020-12-28 19:00"
      String no2Value = response_body_items_0["no2Value"]; // "0.043"
      String o3Value = response_body_items_0["o3Value"]; // "0.018"

      Serial.println("측정시간="+dataTime);
      Serial.println("통합대기환경수치="+khaiValue);
      Serial.println("아황산가스농도="+so2Value + "ppm");
      Serial.println("일산화탄소농도="+coValue + "ppm");
      Serial.println("미세먼지(PM10)농도="+pm10Value + "ug/m3");
      Serial.println("이산화질소농도="+no2Value + "ppm");
      Serial.println("오존농도="+o3Value + "ppm");
    }
    
  }
  Serial.println("DONE");
}

void loop() {
}

String utf8(String input){
  String output;
  for(int i = 0;i<input.length();i++){
    output += "%" + String(input[i],HEX);
    //Serial.println(text1[i],HEX);
  }
  return output;
}