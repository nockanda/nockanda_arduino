/*
 예제 234-1 사물인터넷보드(wemos d1r1)을 이용한 openapi이다!
 서울시 실시간 지하철 도착정보 openapi를 이용해서 시리얼모니터에 결과를 출력해보자!
 일단은 메모리 문제가 있어서 모든 데이터를 취할 수 없기에 최대 17건의 기차정보를 가져와보자!
 (가급적이면 전반적인 기차수가 적은 역을 선택하는게 좋을 것 같다..)
 */
#include <ESP8266WiFi.h>
#include <ArduinoJson.h>

#ifndef STASSID
#define STASSID "~~~~~" //와이파이 검색했을때 뜨는 이름
#define STAPSK  "~~~~~" //패스워드
#endif

const char* ssid = STASSID;
const char* password = STAPSK;


const char* host = "swopenAPI.seoul.go.kr";
const int httpsPort = 80;

String yourkey = "~~~~~";
String subway_name = "홍대입구";

WiFiClient client;
void setup() {
  Serial.begin(115200);
  Serial.println();
  Serial.print("connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  
  Serial.print("connecting to ");
  Serial.println(host);

  //클라이언트와 서버와 커넥트
  if (!client.connect(host, httpsPort)) {
    Serial.println("connection failed");
    return;
  }

  String url = "/api/subway/"+yourkey+"/json/realtimeStationArrival/0/17/"+utf8(subway_name);

  //사물인터넷보드에서 RSS서버로 보내는 요청!
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");

  //서버로부터 응답이 있을때까지 대기하겠다..
  //언제까지 기다려야하나요..?
  //timeout!
  unsigned long t = millis(); //생존시간
  while(1){
    if(client.available()) break;
    if(millis() - t > 10000) break;
  }


  //응답이 날라오는 부분!
  Serial.println("request sent");

  String output;
  while(client.available()){
    String data = client.readStringUntil('\n'); //readline();
    //{"error
    //}]}
    if(data.indexOf("{\"error") != -1) output+= data;
    if(data.indexOf("}]}") != -1) output+= data;
  }
  //Serial.println(output);
  DynamicJsonDocument doc(18000);
  deserializeJson(doc, output);
  output= "";
  JsonObject errorMessage = doc["errorMessage"];
  int errorMessage_total = errorMessage["total"]; // 22
  int count = 17;
 
  if(errorMessage_total < 17){
    count = errorMessage_total;
  }

  for(int i = 0;i<count;i++){
    JsonObject element = doc["realtimeArrivalList"][i];
    String btrainNo = element["btrainNo"];
    String updnLine = element["updnLine"];
    String barvlDt = element["barvlDt"];
    //2021-01-21 20:59:00.0
    //012345678901234567890
    String recptnDt = element["recptnDt"];
    recptnDt = recptnDt.substring(11,19);
    String arvlMsg2 = element["arvlMsg2"];
    String arvlMsg3 = element["arvlMsg3"];

    Serial.print(btrainNo);Serial.print("\t");
    Serial.print(updnLine);Serial.print("\t");
    Serial.print(barvlDt);Serial.print("\t");
    Serial.print(recptnDt);Serial.print("\t");
    Serial.print(arvlMsg2);Serial.print("\t");
    Serial.print(arvlMsg3);Serial.print("\t");
    Serial.println();
  }

  
  Serial.println("DONE");
}

void loop() {
}

String utf8(String input){
  String output;
  for(int i =0;i<input.length();i+=3){
    output += "%" + String(input[i],HEX);
    output += "%" + String(input[i+1],HEX);
    output += "%" + String(input[i+2],HEX);
  }
  return output;
}