/*
 * 예제 119
 * 열전사 프린터(영수증 프린터)를 이용해서 온습도 타코메타를 만들자
 * 온습도 모듈은 DHT11은 D8에 연결했다
 * 현재 시간을 함께 출력하기 위해서 RTC모듈을 사용했다
 * RTC 모듈은 2,3,4번핀에 아래 표기한 대로 연결했다.
 * 영수증 프린터는 시리얼 통신을 하고 D5와 D6에 각각 연결했다.
 * 3초에 한번 현재시간과 온습도를 측정해서 영수증 프린터에 한라인씩 출력해보자!
 */

#include <ThreeWire.h>  
#include <RtcDS1302.h>
#include "DHT.h"
#include "Adafruit_Thermal.h"
#include "SoftwareSerial.h"
#define DHTPIN 8
#define DHTTYPE DHT11
#define TX_PIN 6
#define RX_PIN 5
                //io clk rst
ThreeWire myWire(3,4,2);
RtcDS1302<ThreeWire> Rtc(myWire);
DHT dht(DHTPIN, DHTTYPE);
SoftwareSerial mySerial(RX_PIN, TX_PIN);
Adafruit_Thermal printer(&mySerial);    
void setup() {
  // put your setup code here, to run once:
   Serial.begin(9600);
   mySerial.begin(9600);
   printer.begin(); 
   dht.begin();
    Serial.print("compiled: ");
    Serial.print(__DATE__);
    Serial.println(__TIME__);

    Rtc.Begin();

    RtcDateTime compiled = RtcDateTime(__DATE__, __TIME__);
    //printDateTime(compiled);
    Serial.println();

    if (!Rtc.IsDateTimeValid()) 
    {
        // Common Causes:
        //    1) first time you ran and the device wasn't running yet
        //    2) the battery on the device is low or even missing

        Serial.println("RTC lost confidence in the DateTime!");
        Rtc.SetDateTime(compiled);
    }

    if (Rtc.GetIsWriteProtected())
    {
        Serial.println("RTC was write protected, enabling writing now");
        Rtc.SetIsWriteProtected(false);
    }

    if (!Rtc.GetIsRunning())
    {
        Serial.println("RTC was not actively running, starting now");
        Rtc.SetIsRunning(true);
    }

    RtcDateTime now = Rtc.GetDateTime();
    if (now < compiled) 
    {
        Serial.println("RTC is older than compile time!  (Updating DateTime)");
        Rtc.SetDateTime(compiled);
    }
    else if (now > compiled) 
    {
        Serial.println("RTC is newer than compile time. (this is expected)");
    }
    else if (now == compiled) 
    {
        Serial.println("RTC is the same as compile time! (not expected but all is fine)");
    }
}

void loop () 
{
    RtcDateTime now = Rtc.GetDateTime();
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    String text = String(now.Year()) + "/" + String(now.Month()) + "/" + String(now.Day())
     +" " + String(now.Hour()) + ":" + String(now.Minute()) + ":" + String(now.Second())
     +" T=" + String(t) + ", H=" + String(h);
     printer.setSize('M');
    //Serial.println(text);
    //printer.println(text);
    if (!now.IsValid())
    {
        // Common Causes:
        //    1) the battery on the device is low or even missing and the power line was disconnected
        Serial.println("RTC lost confidence in the DateTime!");
    }

    delay(3000); // ten seconds
}
