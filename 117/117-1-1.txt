/*
 * 예제117-1-1 (마스터코드)
 * 마스터에 버튼2개가 달려있다
 * 첫번째 버튼은 D3에 연결되어있고 슬레이브 1의 LED를 제어한다
 * 두번째 버튼은 D4에 연결되어있고 슬레이브 2의 LED를 제어한다
 * 마스터가 슬레이브1과 슬레이브2에게 아래와 같이 전송한다
 * (예시) [아이디] [작업내용] [명령] [나머지 빈패킷]
 * 0x0F6 0x01 0x00 = ID가 0x0F6인것의 LED제어 명령인데 LED를 꺼라
 * 0x0F6 0x01 0x01 = ID가 0x0F6인것의 LED제어 명령인데 LED를 켜라
 * 0x036 0x01 0x01 = ID가 0x036인것의 LED제어 명령인데 LED를 켜라
 */

#include <SPI.h>
#include <mcp2515.h>

#define slave1 0x0F6
#define slave2 0x036

#define job1 0x00 //생존확인용 job
#define job2 0x01 //LED 제어용 job
#define job3 0x02
#define job4 0x03

#define button1 3 //슬레이브1번꺼
#define button2 4 //슬레이브2번꺼

struct can_frame canMsg;
struct can_frame canMsg1;
struct can_frame canMsg2;
MCP2515 mcp2515(10);

bool pre_button1_state = HIGH; //풀업이므로
bool pre_button2_state = HIGH; //풀업이므로

void setup() {
  pinMode(button1,INPUT_PULLUP);
  pinMode(button2,INPUT_PULLUP);
  Serial.begin(9600);
  
  mcp2515.reset();
  mcp2515.setBitrate(CAN_125KBPS);
  mcp2515.setNormalMode();
  
  Serial.println("Example: Write to CAN");
}

void loop() {
  bool button1_state = digitalRead(button1);
  if(pre_button1_state==HIGH && button1_state==LOW){
    Serial.println("버튼이 눌려졌으니 신호를 보내야겠다");
    send_can_message(slave1,job2,HIGH);
  }else if(pre_button1_state==LOW && button1_state==HIGH){
    Serial.println("버튼이 떨어졌으니 신호를 보내야겠다");
    send_can_message(slave1,job2,LOW);
  }
  pre_button1_state = button1_state;
  
  bool button2_state = digitalRead(button2);
  if(pre_button2_state==HIGH && button2_state==LOW){
    Serial.println("버튼이 눌려졌으니 신호를 보내야겠다");
    send_can_message(slave2,job2,HIGH);
  }else if(pre_button2_state==LOW && button2_state==HIGH){
    Serial.println("버튼이 떨어졌으니 신호를 보내야겠다");
    send_can_message(slave2,job2,LOW);
  }
  pre_button2_state = button2_state;

}

void send_can_message(int id, byte job, byte led){
  //임시위치
    //Request slave1
  canMsg1.can_id  = id; //슬레이브1의 ID
  canMsg1.can_dlc = 8;
  canMsg1.data[0] = job;
  canMsg1.data[1] = led; //LED ON
  canMsg1.data[2] = 0x00;
  canMsg1.data[3] = 0x00;
  canMsg1.data[4] = 0x00;
  canMsg1.data[5] = 0x00;
  canMsg1.data[6] = 0x00;
  canMsg1.data[7] = 0x00; 
  mcp2515.sendMessage(&canMsg1);
  Serial.print("ID=");
  Serial.println(canMsg1.can_id,HEX);
  Serial.println("[마스터에서 슬레이브1로 보낸 메시지]");
  for (int i = 0; i<canMsg1.can_dlc; i++)  {  // print the data
      Serial.print(canMsg1.data[i],HEX);
      Serial.print(" ");
  }
  Serial.println();
  //Response
  if (mcp2515.readMessage(&canMsg) == MCP2515::ERROR_OK) {
    Serial.println("[마스터의 응답데이터]");
    
    for (int i = 0; i<canMsg.can_dlc; i++)  {  // print the data
      Serial.print(canMsg.data[i],HEX);
      Serial.print(" ");
    }

    Serial.println();
  }
}
