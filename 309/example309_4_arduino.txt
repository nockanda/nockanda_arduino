#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include "LedControl.h"
LedControl lc=LedControl(D12,D11,D10,4);

#ifndef STASSID
#define STASSID "popcorn"
#define STAPSK  "11213144"
#endif

const char* ssid     = STASSID;
const char* password = STAPSK;

ESP8266WebServer server(80);

const int led = LED_BUILTIN;


void handleRoot() {
  digitalWrite(led, 1);
  server.send(200, "text/html", "OK");
  digitalWrite(led, 0);
}


void handleForm() {
  if (server.method() != HTTP_POST) {
    digitalWrite(led, 1);
    server.send(405, "text/plain", "Method Not Allowed");
    digitalWrite(led, 0);
  } else {
    digitalWrite(led, 1);

    for(int i = 0;i<4;i++){
      lc.shutdown(i,false);
      lc.setIntensity(i,8);
      lc.clearDisplay(i);
    } 
    
    String message = "POST form was:\n";
    for (uint8_t i = 0; i < server.args()-1; i++) {
      Serial.println(server.argName(i) + ": " + server.arg(i));
      //server.argName(i) == 11
      int row = (server.argName(i)[0]-'0')-1;
      int col = (server.argName(i)[1]-'0')-1;
      for(int device = 0;device<4;device++){
        if(server.arg(i) == "0"){
          lc.setLed(device,row,col,false);  
        }else if(server.arg(i) == "1"){
          lc.setLed(device,row,col,true);  
        }
        
      }
    }

    
    server.send(200, "text/plain", "OK");
    digitalWrite(led, 0);
  }
}

void handleNotFound() {
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  digitalWrite(led, 0);
}

void setup(void) {
  pinMode(led, OUTPUT);
  digitalWrite(led, 0);
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("");

  for(int i = 0;i<4;i++){
    lc.shutdown(i,false);
    lc.setIntensity(i,8);
    lc.clearDisplay(i);
  }

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (MDNS.begin("esp8266")) {
    Serial.println("MDNS responder started");
  }

  server.on("/", handleRoot);


  server.on("/postform/", handleForm);

  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
}