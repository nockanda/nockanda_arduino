/*
 * 149-3 SPI LCD모듈(ILI9341)을 연결해서
 * 온도과정 및 측정결과를 LCD화면에 표시해보자!
 */

#include <Wire.h>
#include <Adafruit_MLX90614.h>
#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_ILI9341.h"

#define trig 2
#define echo 3
#define TFT_DC 9
#define TFT_CS 10
#define TFT_MOSI 11 
#define TFT_CLK 13
#define TFT_RST 8
#define TFT_MISO 12

Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_CLK, TFT_RST, TFT_MISO);
Adafruit_MLX90614 mlx = Adafruit_MLX90614();

int limit = 20; //유저가 얼마만큼 가까이 와야 작동할거냐~

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(trig,OUTPUT); //trig 발사
  pinMode(echo,INPUT); //echo 받기
  mlx.begin(); 
  tft.begin();
  tft.setTextColor(ILI9341_YELLOW);
  tft.setTextSize(5);
  tft.fillScreen(ILI9341_BLACK);
  tft.println("HELLO!!");
  tft.println("NOCKANDA SYSTEM!");
}

void loop() {
  // put your main code here, to run repeatedly:
  if(choumpa() <= limit){
    //버튼이 눌려진것(풀업방식)
    //Serial.println("버튼이 눌려졌다!");
    //3초동안 오브젝트가 유지가 되었을때(=3초간 버튼을 눌렀을때)
    unsigned long t = millis(); //스톱워치작동!
    bool mode = false;
    while(1){
      if(choumpa() > limit){
        //버튼이 안눌려진거
        break;
      }
      if(millis() - t > 3000){
        //루프진입시점대비 3초이상 차이가 발생한 지점!
        mode = true;
        break;
      }
    }

    if(mode){
      tft.fillScreen(ILI9341_BLACK);
      tft.setCursor(0, 10);
      tft.println("Don't move!!!");
      Serial.println("온도측정 중입니다! 움직이지마세요!");  
      t = millis(); //스톱워치작동!
      float temp = 0; //온도값을 누적할 변수
      int count = 0; //샘플의 갯수를 누적할 변수
      tone(4, 3520); //부저작동!
      while(1){
        if(millis() - t > 3000){
          //3초이상
          break;
        }
        temp += mlx.readObjectTempC();
        count++;
        delay(10);
      }
      noTone(4); //부저멈춤!
      Serial.println("측정종료=");
      Serial.println(temp/count);
      tft.print("Resule = ");
      tft.print(temp/count);
      tft.println("'C");
    }
    
  }
}

float choumpa(){
  float duration = 0;
  digitalWrite(trig,LOW);
  delayMicroseconds(trig);
  digitalWrite(trig,HIGH);
  delayMicroseconds(10);
  digitalWrite(trig,LOW);
  duration = (pulseIn(echo, HIGH)/29.0)/2; //cm
  return duration;
}
