#include <MsTimer2.h>

#define NOCK_CLK 4
#define NOCK_DT 5
#define NOCK_SW 3

#define buzzer 9

bool pre_sensorA = LOW;

volatile int num = 31;
int pre_num = 31;
volatile bool is_actived = false;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //나 결과를 PC로 볼꺼야~
  pinMode(NOCK_CLK, INPUT);
  pinMode(NOCK_DT, INPUT);
  pinMode(NOCK_SW, INPUT_PULLUP);
  //나는 어떤 핀을 외부 인터럽트로 활용하겠다!
  attachInterrupt(digitalPinToInterrupt(NOCK_SW), button_pressed, FALLING);

  //타이머 인터럽트를 실행하겠다!
  MsTimer2::set(1, rotary_encoder); //시간, 함수
  MsTimer2::start();
}

void loop() {
  // put your main code here, to run repeatedly:
  if(Serial.available()){
    //PC에서 아두이노쪽으로 시리얼모니터로 뭔가 전송했다~!
    char c = Serial.read();
    if(c == '0'){
      //작업이 이루어지는상황!
      Serial.println(num);
      Serial.println("앞으로 10초간 파업을 하겠습니다!!!");
      delay(10000);
      Serial.println("협상이 잘 되었습니다!!");
    }
  }
  

  //1.지금 센서값을 확인해야하는 타이밍인가?
  //(=CLK핀에 상승에지가 발생했는가?)
  bool sensorA = digitalRead(NOCK_CLK);//N
  
  //여기서 할거하고~~
  if(pre_sensorA == HIGH && sensorA == LOW){
    //센서A의 Falling edge!
    //2.센서B의 상태를 가지고 와서 비교를 해본다!
    bool sensorB = digitalRead(NOCK_DT);
    if(sensorA != sensorB){
      //시계방향으로 회전하고 있구나~
      //Serial.println("시계방향");
      num+=10;
      if(num > 4978) num = 4978;
    }else{
      //반시계방향으로 회전하고 있구나~
      //Serial.println("반시계방향");
      num-=10;
      if(num < 31) num = 31;
    }
    if(is_actived){
      Serial.print("부저작동");
      Serial.println(num);
      tone(buzzer,num); //톤함수는 mstimer2하고 궁합이 안맞다...
    }else{
      Serial.print("부저멈춤");
      Serial.println(num);
      noTone(buzzer);
    }
  }


  pre_sensorA = sensorA;
}

void button_pressed(){
  //인터럽트가 발생하면(=버튼이눌려지면) 뭘 할래?
  if(is_actived){
    //부저를 멈춘다
    Serial.println("부저를 끈다");
    noTone(buzzer);
    is_actived = false;
  }else{
    //부저를 작동한다
    Serial.println("부저를 켠다");
    tone(buzzer,num);
    is_actived = true;
  }
  //디바운스 처리가 귀찮아서 일단..
  delay(300);
}

void rotary_encoder(){
  //1.지금 센서값을 확인해야하는 타이밍인가?
  //(=CLK핀에 상승에지가 발생했는가?)
  bool sensorA = digitalRead(NOCK_CLK);//N
  
  //여기서 할거하고~~
  if(pre_sensorA == HIGH && sensorA == LOW){
    //센서A의 Falling edge!
    //2.센서B의 상태를 가지고 와서 비교를 해본다!
    bool sensorB = digitalRead(NOCK_DT);
    if(sensorA != sensorB){
      //시계방향으로 회전하고 있구나~
      //Serial.println("시계방향");
      num+=10;
      if(num > 4978) num = 4978;
    }else{
      //반시계방향으로 회전하고 있구나~
      //Serial.println("반시계방향");
      num-=10;
      if(num < 31) num = 31;
    }

  }


  pre_sensorA = sensorA;
}
