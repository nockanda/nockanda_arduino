/*
 예제 219-2 직전예제에 0.91인치 OLED모듈(SSD1306)을 연결해서
 비접촉전류센서로 측정되는 누적전력량(wh)값과 전기요금을 출력해보자!
 OLED도 i2c모듈이기때문에 SDA핀을 A4에, SCL핀을 A5에 연결하자!
 */

#include "EmonLib.h"                   // Include Emon Library
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32

#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

EnergyMonitor emon1;                   // Create an instance
double IrmsNock = 0;
double total_power = 0;
unsigned long t1= 0;

void setup()
{  
  Serial.begin(9600);
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  display.display();
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
         //아날로그핀번호, 상수값
         //SCT013-030 = 30
  emon1.current(0, 30);             // Current: input pin, calibration.

  //비접촉전류센서가 초기화될때 5~6개 샘플 정도는 노이즈가 심한값
  for(int i = 0;i<5;i++){
    emon1.calcIrms(1480);
  }
  Serial.println("INIT CT SENSOR!");
  /*
  //5개 샘플정도를 얻은다음에 그값을 아래쪽에서 빼버리자!
  for(int i = 0;i<5;i++){
    IrmsNock += emon1.calcIrms(1480);
  }
  IrmsNock = IrmsNock / 5; //IrmsNock /= 5

  Serial.println(IrmsNock);
  */
  t1 = millis();
}

void loop()
{
  double Irms = emon1.calcIrms(1480);  // Calculate Irms only
  if(Irms < 0.09) Irms = 0;

  unsigned int t2 = millis();
  int nocktime = t2 - t1;
  t1 = t2;
  double power = Irms*220.0;
  //noctime = 1/1000 s
  //total_power는 시간(h)가 곱해져야하는데
  //현재 측정된 nocktime의 경우에는 ms단위이다.
  //그러므로 ms를 s로 바꾸기위해서 1000을 나눠줘야하고,
  //s를 m으로 바꾸기위해서 60을 나눠줘야하고, m을 h로 바꾸기위해서 60을 나눠줘야한다.
  //그렇지만 전체 360만이라는 값을 한번에 나누면 double자료형의 소수점 유효숫자에 범위가 줄어들기 때문에
  //우선적으로 3600을 나누고 최종결과에서 1000을 나누도록 한다!
  total_power += power * nocktime/3600; 
  Serial.print(nocktime); //샘플간격의 시간
  Serial.print('\t');
  float wh = total_power/1000;
  float price = wh*0.91;
  Serial.print(wh,4); //누적전력량
  Serial.print('\t');
  Serial.print(power,4); //순간전력
  Serial.print('\t');
  Serial.print(Irms,4); //순간전류
  Serial.print('\t');
  Serial.println(price,4); //전기요금
  //0.057wh 
  //1000wh : 910 = 0.057wh : ?
  //0.057 * 0.91
  display.clearDisplay();
  display.setCursor(0,0);
  display.print("Wh:"); display.println(String(wh,4));
  display.print("Pr:");display.println(String(price,4));
  display.display();
}