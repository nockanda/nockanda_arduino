/*
 * 예제146-2 이전에했던 82-1번예제의 draw_arc를 이용해서
 * 더미값으로 RPM 스타일의 그래프를 출력해보자
 */

#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_ILI9341.h"

// For the Adafruit shield, these are the default.
#define TFT_DC 9
#define TFT_CS 10
#define TFT_MOSI 11
#define TFT_CLK 13
#define TFT_RST 8
#define TFT_MISO 12

// Use hardware SPI (on Uno, #13, #12, #11) and the above for CS/DC
//Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);
// If using the breakout, change pins as desired
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_CLK, TFT_RST, TFT_MISO);

void setup() {
  Serial.begin(9600);
  Serial.println("ILI9341 Test!"); 
  randomSeed(analogRead(0));
  tft.begin();

  // read diagnostics (optional but can help debug problems)
  uint8_t x = tft.readcommand8(ILI9341_RDMODE);
  Serial.print("Display Power Mode: 0x"); Serial.println(x, HEX);
  x = tft.readcommand8(ILI9341_RDMADCTL);
  Serial.print("MADCTL Mode: 0x"); Serial.println(x, HEX);
  x = tft.readcommand8(ILI9341_RDPIXFMT);
  Serial.print("Pixel Format: 0x"); Serial.println(x, HEX);
  x = tft.readcommand8(ILI9341_RDIMGFMT);
  Serial.print("Image Format: 0x"); Serial.println(x, HEX);
  x = tft.readcommand8(ILI9341_RDSELFDIAG);
  Serial.print("Self Diagnostic: 0x"); Serial.println(x, HEX); 

  tft.setRotation(1); //화면의 방향을 결정(0~3)

  

}


void loop(void) {

    int angle1 = random(0, 181); //0~180
    int angle2 = random(0, 181);

  drawMonitor(angle1,angle2);
  delay(1000);
}

int graph1_x = 10;
int graph1_y = 180;
int graph1_width = 140;
int graph1_height = 50; 
int graph2_x = 170;
int graph2_y = 180;
int graph2_width = 140;
int graph2_height = 50; 
void clearMonitor(){
  tft.fillRect(10,110,160,70,ILI9341_BLACK);
  tft.fillRect(170,110,160,70,ILI9341_BLACK);
}
void drawMonitor(int d, int h){
    //제목
  tft.fillScreen(ILI9341_BLACK);
  tft.drawRect(0,0,159,239,ILI9341_YELLOW);
  tft.drawRect(160,0,159,239,ILI9341_GREEN);
  tft.setTextColor(ILI9341_YELLOW);
  tft.setTextSize(4);
  tft.setCursor(10, 10);
  tft.println("TOP");
  tft.setTextColor(ILI9341_GREEN);
  tft.setCursor(170, 10);
  tft.println("BOTTOM");
  //온도
  tft.setTextColor(ILI9341_YELLOW);
  tft.setCursor(10, 70);
  tft.print(d);
  tft.println("'");
  tft.setCursor(170, 70);
  //습도
  tft.setTextColor(ILI9341_GREEN);
  tft.print(h);
  tft.println("'");
  //RPM그래프 만들기(240*320)
         //센터좌표 //크기 값 하한 상한 색
  //printRPM(80,240,160,120,d,0,180,YELLOW); //탑
  fillArc(80,240,80,d,10,ILI9341_YELLOW);
  //printRPM(240,240,160,120,h,0,180,GREEN); //보톰
  fillArc(240,240,80,h,10,ILI9341_GREEN);
}
void fillArc(int arc_center_x,int arc_center_y,int arc_r,float arc_angle,int arc_tick, uint16_t color){ 
  
  for(float i = 0; i<=arc_angle; i+=0.5){
    float arc_x = arc_center_x+arc_r * cos(i*(PI/180.0));
    float arc_y = arc_center_y-arc_r * sin(i*(PI/180.0));
    float arc_x2 = arc_center_x+(arc_r-arc_tick) * cos(i*(PI/180.0));
    float arc_y2 = arc_center_y-(arc_r-arc_tick) * sin(i*(PI/180.0));
    //tft.fillCircle(arc_x, arc_y, 1, YELLOW);
    //tft.fillCircle(arc_x2, arc_y2, 1, GREEN);
    tft.drawLine(arc_x, arc_y, arc_x2, arc_y2, color);
  }
}
