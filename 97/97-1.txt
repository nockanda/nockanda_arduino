/*
 * 예제97-1
 * 0.91인치 OLED 디스플레이를 이용해서
 * RTC모듈인 DS1302의 날짜 및 시간정보를
 * 표시할 수 있도록 해보자!
 */
// CONNECTIONS:
// DS1302 CLK/SCLK --> 2
// DS1302 DAT/IO --> 3
// DS1302 RST/CE --> 4
// DS1302 VCC --> 5v
// DS1302 GND --> GND

#include <ThreeWire.h>  
#include <RtcDS1302.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
ThreeWire myWire(3,2,4); // IO, SCLK, CE
RtcDS1302<ThreeWire> Rtc(myWire);

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
    Serial.print("compiled: ");
    Serial.print(__DATE__);
    Serial.println(__TIME__);

    Rtc.Begin();

    RtcDateTime compiled = RtcDateTime(__DATE__, __TIME__);
    //printDateTime(compiled);
    Serial.println();

    if (!Rtc.IsDateTimeValid()) 
    {
        // Common Causes:
        //    1) first time you ran and the device wasn't running yet
        //    2) the battery on the device is low or even missing

        Serial.println("RTC lost confidence in the DateTime!");
        Rtc.SetDateTime(compiled);
    }

    if (Rtc.GetIsWriteProtected())
    {
        Serial.println("RTC was write protected, enabling writing now");
        Rtc.SetIsWriteProtected(false);
    }

    if (!Rtc.GetIsRunning())
    {
        Serial.println("RTC was not actively running, starting now");
        Rtc.SetIsRunning(true);
    }

    RtcDateTime now = Rtc.GetDateTime();
    if (now < compiled) 
    {
        Serial.println("RTC is older than compile time!  (Updating DateTime)");
        Rtc.SetDateTime(compiled);
    }
    else if (now > compiled) 
    {
        Serial.println("RTC is newer than compile time. (this is expected)");
    }
    else if (now == compiled) 
    {
        Serial.println("RTC is the same as compile time! (not expected but all is fine)");
    }
    display.display();
    delay(2000);
    display.clearDisplay();

    display.setTextSize(2);             // Normal 1:1 pixel scale
    display.setTextColor(SSD1306_WHITE);        // Draw white text
}

void loop() {
  // put your main code here, to run repeatedly:
  RtcDateTime now = Rtc.GetDateTime();
  //now.Year()/now.Month()/now.Day()
  //now.Hour():now.Minute():now.Second()
  //2020/8/3 -> 2020/08/03
  display.clearDisplay();
  display.setCursor(0,0);             // Start at top-left corner
  display.print(now.Year());
  display.print("/");
  if(now.Month() < 10) display.print("0");
  display.print(now.Month());
  display.print("/");
  if(now.Day() < 10) display.print("0");
  display.println(now.Day());
  if(now.Hour() < 10) display.print("0");
  display.print(now.Hour());
  display.print(":");
  if(now.Minute() < 10) display.print("0");
  display.print(now.Minute());
  display.print(":");
  if(now.Second() < 10) display.print("0");
  display.println(now.Second());
  display.display();
  
  delay(1000);
}