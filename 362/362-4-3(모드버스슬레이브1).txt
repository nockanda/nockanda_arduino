#include <SoftwareSerial.h>
#include "CRC16.h"
#include "CRC.h"

#define led1 4
#define led2 5
#define led3 6
#define led4 7

byte myid = 0x01;

CRC16 crc;

#define mode 13
SoftwareSerial modbus(2, 3); //모듈tx, rx @아두이노 입장 rx, tx

byte buff[50];

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //아두이노-PC 통신라인(결과출력용)
  modbus.begin(9600); //사용하는 제품마다 숫자가 다름!
  pinMode(led1,OUTPUT);
  pinMode(led2,OUTPUT);
  pinMode(led3,OUTPUT);
  pinMode(led4,OUTPUT);
  pinMode(mode,OUTPUT);
  //시작은 수신모드이다!
  recv_mode();
}

void loop() {
  // put your main code here, to run repeatedly:
  //두목이 뭔가 보내줄때까지 기다려야한다!
  if(modbus.available()){
    delay(100);
    Serial.println(modbus.available());
    //두목이 뭔가 전송했다!
    //받는 데이터 길이가 정해져있지않다!
    int len = 0;
    while(true){
      if(!modbus.available()) break;
      buff[len] = modbus.read();
      len++;
    }
    //나한테 온게 맞냐?
    if(buff[0] != myid){
      return;
    }
    
    //받아온 데이터에서 CRC를 제외한 부분만 추려낸다!
    if(len < 2) return;
    byte req[len-2];

    for(int i = 0;i<len-2;i++){
      req[i] = buff[i];
    }
    
    //받은 데이터가 적합한지 CRC계산을 해야한다!
    uint16_t request_crc = crc16(req, len-2, 0x8005, 0xFFFF, 0, true, true);
    byte request_crc_high = request_crc >> 8;
    byte request_crc_low = request_crc & 0xFF;
    //마스터에서 받은 CRC buff[len-1] buff[len-2]
    if(buff[len-2] != request_crc_low || buff[len-1] != request_crc_high){
      return;
    }

    //내가 필요한 데이터의 index buff(4,5)
    if(buff[4] == 0){
      //led1번
      if(buff[5] == 0){
        //끈다
        digitalWrite(led1,LOW);
      }else if(buff[5] == 1){
        //켠다
        digitalWrite(led1,HIGH);
      }
    }else if(buff[4] == 1){
      //led2번
      if(buff[5] == 0){
        //끈다
        digitalWrite(led2,LOW);
      }else if(buff[5] == 1){
        //켠다
        digitalWrite(led2,HIGH);
      }
    }else if(buff[4] == 2){
      //led3번
      if(buff[5] == 0){
        //끈다
        digitalWrite(led3,LOW);
      }else if(buff[5] == 1){
        //켠다
        digitalWrite(led3,HIGH);
      }
    }else if(buff[4] == 3){
      //led4번
      if(buff[5] == 0){
        //끈다
        digitalWrite(led4,LOW);
      }else if(buff[5] == 1){
        //켠다
        digitalWrite(led4,HIGH);
      }
    }
    
    //받은데이터를 그대로 마스터쪽으로 echo한다!
    send_mode();
    for(int i = 0;i<len;i++){
      modbus.write(buff[i]);
    }
    recv_mode();
  }
}
void send_mode(){
  digitalWrite(mode,HIGH);
}
void recv_mode(){
  digitalWrite(mode,LOW);
}