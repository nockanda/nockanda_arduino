/*
 * 예제55-1 온도센서(DHT-11)을 이용해서
 * 0.91인치 OLED디스플레이(ssd1306)에 표시해보자
 * 온도센서는 D2에 연결했고
 * 디스플레이는 A4(SDA)와 A5(SDL)에만 연결해야 했다.
 * 비트맵을 사용하도록 C# 프로그램을 별첨한다.
 */

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "DHT.h"

#define DHTPIN 2 
#define DHTTYPE DHT11
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
DHT dht(DHTPIN, DHTTYPE);
#define LOGO_HEIGHT   31
#define LOGO_WIDTH    16
static const unsigned char PROGMEM logo_bmp[] =
{ B00000111, B11100000,
B00011100, B00110000,
B00110000, B00010000,
B00100000, B00010000,
B00100000, B00010000,
B00100000, B00001000,
B00100000, B00001000,
B00100000, B00001000,
B00100000, B00001000,
B00100000, B00001100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00100000, B00000100,
B00110000, B00000100,
B00010111, B11110100,
B00010111, B11111000,
B00011111, B11111000,
B00001100, B11111000,
B00000110, B01111000,
B00000111, B11110000,
B00000011, B11100000,
B00000001, B11000000 };
static const unsigned char PROGMEM logo_bmp2[] =
{ B00000000, B00000000,
B00000000, B00000000,
B00000001, B00000000,
B00000011, B10000000,
B00000011, B10000000,
B00000111, B10000000,
B00000111, B11000000,
B00000111, B11000000,
B00000111, B11000000,
B00001111, B11000000,
B00001111, B11100000,
B00001110, B11100000,
B00001110, B11100000,
B00011110, B11110000,
B00011100, B01110000,
B00011100, B01111000,
B00011100, B00111000,
B00011100, B00111100,
B00111100, B00011100,
B00111000, B00011100,
B00111000, B00011100,
B01111000, B00011100,
B01111000, B00011100,
B01110000, B00011100,
B01110000, B00011100,
B01111000, B00011100,
B00111100, B00011100,
B00111111, B11111100,
B00011111, B11111100,
B00000111, B11111100,
B00000000, B00000000 };

void setup() {
  // put your setup code here, to run once:
 Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  dht.begin();
  // Show initial display buffer contents on the screen --
  // the library initializes this with an Adafruit splash screen.
  display.display();
  
}

void loop() {
  // put your main code here, to run repeatedly:
  delay(2000); // Pause for 2 seconds
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  if (isnan(h) || isnan(t)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  // Clear the buffer
  display.clearDisplay();
  
  display.drawBitmap(
    10,0,logo_bmp, 16, 31, 1);
  display.setTextSize(2);             // Normal 1:1 pixel scale
  display.setTextColor(SSD1306_WHITE);        // Draw white text
  display.setCursor(26,10);             // Start at top-left corner
  display.print((int)t);
  display.print("'C");
  display.drawBitmap(
    70,0,logo_bmp2, 16, 31, 1);
  display.setCursor(86,10);             // Start at top-left corner
  display.print((int)h);
  display.print("%");
    
  display.display();
}