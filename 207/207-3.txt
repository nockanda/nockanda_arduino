/*
 예제 207-3 직전예제에 사물인터넷보드에 MQTT기능을 추가해보자!
 유저가 16개의 숫자를 입력하고 #버튼을 누르게되면 MQTT로 publish해보자!
 이때 topic은 nockanda/number로 publish해보자!
 직전 예제와 기능상의 차이는 1도없음!
*/

#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Keypad.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

const byte ROWS = 4; //four rows
const byte COLS = 3; //four columns
//define the cymbols on the buttons of the keypads
char hexaKeys[ROWS][COLS] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};
                    //R1 R2 R3 R4
byte rowPins[ROWS] = {D9, D8, D7, D6}; //connect to the row pinouts of the keypad
                    //C1 C2 C3 C4
byte colPins[COLS] = {D5, D2, D0}; //connect to the column pinouts of the keypad
String text;
//initialize an instance of class NewKeypad
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 
LiquidCrystal_I2C lcd(0x27,16,2);

// Update these with values suitable for your network.

const char* ssid = "~~~~";
const char* password = "~~~~";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE	(50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  // Switch on the LED if an 1 was received as first character
  if ((char)payload[0] == '1') {
    digitalWrite(BUILTIN_LED, LOW);   // Turn the LED on (Note that LOW is the voltage level
    // but actually the LED is on; this is because
    // it is active low on the ESP-01)
  } else {
    digitalWrite(BUILTIN_LED, HIGH);  // Turn the LED off by making the voltage HIGH
  }

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      //client.publish("outTopic", "hello world");
      // ... and resubscribe
      //client.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);     // Initialize the BUILTIN_LED pin as an output
  Serial.begin(115200);
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("YOUR MESSAGE?");
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  char customKey = customKeypad.getKey(); 
  if (customKey){
    if(customKey == '#'){
      //#버튼을 누르면 publish한다
      //string을 char array로 바꾸는 작업을 약간 해야한다!
      char number[text.length()+1];
      text.toCharArray(number,text.length()+1);
      client.publish("nockanda/number", number);
      text = "";
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("YOUR MESSAGE?");
      return;
    }
    //별모양(*)이 입력되면 1개씩 지워지게 해보자!
    if(customKey == '*'){
      //1234 -> 123
      //0123 -> substring(0,3)
      text = text.substring(0,text.length()-1);
    }else{
      text = text + customKey;
    }
    
    if(text.length() > 16){
      //1234 -> 234
      //0123 -> substirng(1,4)
      text = text.substring(1,text.length());
    }
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("YOUR MESSAGE?");
    lcd.setCursor(0,1);
    lcd.print(text);
    Serial.println(text);
  }
}