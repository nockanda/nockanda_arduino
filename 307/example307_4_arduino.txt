#include <ESP8266WiFi.h>

#ifndef STASSID
#define STASSID "popcorn"
#define STAPSK  "11213144"
#endif

#define led1 D3
#define led2 D4
#define led3 D5
#define led4 D6

const char* ssid = STASSID;
const char* password = STAPSK;

// Create an instance of the server
// specify the port to listen on as an argument
WiFiServer server(80);

void setup() {
  Serial.begin(115200);
  pinMode(led1,OUTPUT);
  pinMode(led2,OUTPUT);
  pinMode(led3,OUTPUT);
  pinMode(led4,OUTPUT);

  // prepare LED
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, 0);

  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print(F("Connecting to "));
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(F("."));
  }
  Serial.println();
  Serial.println(F("WiFi connected"));

  // Start the server
  server.begin();
  Serial.println(F("Server started"));

  // Print the IP address
  Serial.println(WiFi.localIP());
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available(); //클라이언트를 기다리는상태
  if (!client) {
    return;
  }
  Serial.println(F("new client"));

  client.setTimeout(5000); // default is 1000

  // Read the first line of the request
  String req = client.readStringUntil('\r');
  Serial.println(F("request: "));
  Serial.println(req);

  //일단 지우지 말것!
  while (client.available()) {
    client.read();
  }

  int val;
  client.print(F("HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n"));
  if (req.indexOf(F("/10")) != -1) {
    digitalWrite(led1,LOW); 
    client.print(F("LED1을 OFF하겠습니다!"));
  } else if (req.indexOf(F("/11")) != -1) {
    digitalWrite(led1,HIGH);
    client.print(F("LED1을 ON하겠습니다!"));
  } else if (req.indexOf(F("/20")) != -1) {
    digitalWrite(led2,LOW);
    client.print(F("LED2을 OFF하겠습니다!"));
  } else if (req.indexOf(F("/21")) != -1) {
    digitalWrite(led2,HIGH);
    client.print(F("LED2을 ON하겠습니다!"));
  }else if (req.indexOf(F("/30")) != -1) {
    digitalWrite(led3,LOW);
    client.print(F("LED3을 OFF하겠습니다!"));
  } else if (req.indexOf(F("/31")) != -1) {
    digitalWrite(led3,HIGH);
    client.print(F("LED3을 ON하겠습니다!"));
  }else if (req.indexOf(F("/40")) != -1) {
    digitalWrite(led4,LOW);
    client.print(F("LED4을 OFF하겠습니다!"));
  } else if (req.indexOf(F("/41")) != -1) {
    digitalWrite(led4,HIGH);
    client.print(F("LED4을 ON하겠습니다!"));
  }
  else {
    client.print(F("NOCKANDA FOREVER!!"));
  }

  Serial.println(F("Disconnecting from client"));
}
