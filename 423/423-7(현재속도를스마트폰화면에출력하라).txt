/*
AccelStepper stepper = AccelStepper(연결방식, STEP핀, DIR핀);
stepper.setMaxSpeed(1000); //최대속도
stepper.setCurrentPosition(0); //현재 스탭을 설정
stepper.currentPosition(); //현재 스탭을 반환
stepper.setSpeed(200); //스탭모터의 방향과 속도를 설정
stepper.runSpeed(); //스탭모터 작동(고정속도)
stepper.setAcceleration(2000); //가속량을 설정함
stepper.moveTo(1000); //목표스탭량을 설정함
stepper.runToPosition(); //가속도를 붙혀서 스탭모터제어
*/

#include <AccelStepper.h>
#include <SoftwareSerial.h>
SoftwareSerial bluetooth(6,7);

#define DIR1 2
#define STEP1 3
#define DIR2 4
#define STEP2 5 

AccelStepper stepper1 = AccelStepper(1, STEP1, DIR1);
AccelStepper stepper2 = AccelStepper(1, STEP2, DIR2);

unsigned long t = 0;
int speed = 0;
char c = 'X';
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);//결과를 시리얼모니터에서 볼거야~
  bluetooth.begin(9600); //앱인벤터쪽
  stepper1.setMaxSpeed(1000); //초당 몇스탭이냐? 1000/s(초당5회전)
  stepper1.setCurrentPosition(0); //현재 스탭을 설정
  stepper2.setMaxSpeed(1000); //초당 몇스탭이냐? 1000/s(초당5회전)
  stepper2.setCurrentPosition(0); //현재 스탭을 설정
}

//메인스레드
void loop() {
  // put your main code here, to run repeatedly:
  //1000ms마다 한번씩 호출되는 조건문을 만들자!
  if(millis() - t > 1000){
    //500ms마다 한번씩 걸리는 조건문
    t = millis();
    String data = String(c) + "," + String(speed);
    bluetooth.print(data);
  }
  
  if(bluetooth.available()){
    //유저가 시리얼 모니터에서 뭔가 전송했다!
    c = bluetooth.read();
    
    if(c == 'F'){
      //전진하라
      speed += 50; //0 ~ 1000
      if(speed > 1000) speed =1000;
    }else if(c == 'B'){
      //후진하라
      speed -= 50; //-1000 ~ 0
      if(speed < -1000) speed = -1000;
    }else if(c == 'X'){
      //멈추어라
      if(speed > 0){
        //1번스탭모터가 시계방향으로 돌던중에 감속이된다
        speed -=150;
        if(speed < 0) speed = 0;
      }else if(speed < 0){
        //1번스탭모터가 반시계방향으로 돌던중에 감속이된다
        speed +=150;
        if(speed > 0) speed = 0;
      }
    }
    stepper1.setSpeed(speed);
    stepper2.setSpeed(speed * -1);
  }
  stepper1.runSpeed();
  stepper2.runSpeed();
}
