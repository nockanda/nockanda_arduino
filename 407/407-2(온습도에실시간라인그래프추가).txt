
#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <WebSocketsServer.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <Hash.h>
#include "DHT.h"

#define DHTPIN D3
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

#define USE_SERIAL Serial

ESP8266WiFiMulti WiFiMulti;

//웹서버의 포트는 기본 포트인 80번을 사용한다!
ESP8266WebServer server(80);
//웹서버와 웹클라이언트가 뒷구멍으로 주고받는 데이터는 웹소켓에서 81번을 쓴다!
WebSocketsServer webSocket = WebSocketsServer(81);

String response = "\
<html>\
<head>\
<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.bundle.min.js\"></script>\
<script type=\"text/javascript\" charset=\"utf-8\" src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js\"></script>\
<meta name=\"viewport\" content=\"width=device-width\">\
<meta charset=\"utf-8\">\
<script>\
  var connection = new WebSocket('ws://'+location.hostname+':81/', ['arduino']);\
  connection.onopen = function () {\
     connection.send('Connect ' + new Date());\
  };\
  connection.onerror = function (error) {\
     console.log('WebSocket Error ', error);\
  };\
  connection.onmessage = function (e) {\
     console.log('Server: ', e.data);\
     var mydata = JSON.parse(e.data);\
     if(mydata.temp > 17) document.getElementById('temp').style.backgroundColor = 'red';\
     else document.getElementById('temp').style.backgroundColor = 'blue';\
     if(mydata.humi > 45) document.getElementById('humi').style.backgroundColor = 'red';\
     else document.getElementById('humi').style.backgroundColor = 'blue';\
     document.getElementById('temp').innerText = mydata.temp;\
     document.getElementById('temp').style.fontSize = 50;\
     document.getElementById('humi').innerText = mydata.humi;\
     document.getElementById('humi').style.fontSize = 50;\
     chart.data.datasets[0].data.shift();\
     chart.data.datasets[0].data.push(mydata.humi);\
     chart.data.datasets[1].data.shift();\
     chart.data.datasets[1].data.push(mydata.temp);\
     chart.update();\
  };\
  function send_msg(){\
     connection.send('녹칸다 포에버!!!');\
  }\
</script>\
</head>\
<body>\
녹칸다의 온습도센서 예제입니다!<BR>\
<table border=1 width=500>\
   <tr>\
      <th><font size=20>온도('C)</font></th>\
      <th><font size=20>습도(%)</font></th>\
   </tr>\
   <tr>\
      <th id=temp><font size=20>-</font></th>\
      <th id=humi><font size=20>-</font></th>\
   </tr>\
   <tr>\
      <td colspan=2>\
        <div style=\"width:500px;\">\
          <canvas id=\"line1\"></canvas>\
        </div>\
      </td>\
   </tr>\
</table>\
<script>\
var ctx = document.getElementById('line1').getContext('2d');\
var chart = new Chart(ctx, {\
  type: 'line',\
  data: {\
    labels: ['N-6', 'N-5', 'N-4', 'N-3', 'N-2', 'N-1', 'N'],\
    datasets: [\
        {\
          label: 'Humidity',\
          backgroundColor: 'transparent',\
          borderColor: 'blue',\
          data: [0, 0, 0, 0, 0, 0, 0]\
        },\
        {\
          label: 'Temperature',\
          backgroundColor: 'transparent',\
          borderColor: 'red',\
          data: [0, 0, 0, 0, 0, 0, 0]\
        }\
    ]\
  },\
  options: {}\
});\
</script>\
</body>\
</html>";


//클라이언트에서 서버쪽으로 값이 전송되었을때 뭘할거냐?
void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {

    switch(type) {
        case WStype_DISCONNECTED:
            USE_SERIAL.printf("[%u] Disconnected!\n", num);
            break;
        case WStype_CONNECTED: {
            IPAddress ip = webSocket.remoteIP(num);
            USE_SERIAL.printf("[%u] Connected from %d.%d.%d.%d url: %s\n", num, ip[0], ip[1], ip[2], ip[3], payload);

            //num = 소켓번호(클라이언트번호)
            //webSocket.sendTXT(num, "Connected");
        }
            break;
        case WStype_TEXT:
        //메시지 수신부
            USE_SERIAL.printf("[%u] get Text: %s\n", num, payload);


            break;
    }

}

void setup() {
    //USE_SERIAL.begin(921600);
    USE_SERIAL.begin(115200);
    dht.begin();
    
    //USE_SERIAL.setDebugOutput(true);

    USE_SERIAL.println();
    USE_SERIAL.println();
    USE_SERIAL.println();

    for(uint8_t t = 4; t > 0; t--) {
        USE_SERIAL.printf("[SETUP] BOOT WAIT %d...\n", t);
        USE_SERIAL.flush();
        delay(1000);
    }

    //자기자신의 IP공유기 ID비밀번호 집어넣는곳!
    WiFiMulti.addAP("popcorn", "11213144");

    while(WiFiMulti.run() != WL_CONNECTED) {
        delay(100);
    }

    //IP공유기로부터 할당받은 IP주소를 여기서 출력한다!
    USE_SERIAL.println("IP address: ");
    USE_SERIAL.println(WiFi.localIP());
  
    //웹소켓 서버를 연다
    webSocket.begin();
    webSocket.onEvent(webSocketEvent);

    //윈도우10, 안드로이드 안됨..의미없는 기능
    if(MDNS.begin("esp8266")) {
        USE_SERIAL.println("MDNS responder started");
    }

    //웹서버의 index.html
    //웹서버가 클라이언트에게 response해주는 부분!

    server.on("/", []() {
        server.send(200, "text/html", response);
    });

    server.begin();

    // Add service to MDNS
    MDNS.addService("http", "tcp", 80);
    MDNS.addService("ws", "tcp", 81);
}

unsigned long last_10sec = 0;
unsigned int counter = 0;

void loop() {
    unsigned long t = millis();
    webSocket.loop(); //이거 있어야한다!
    server.handleClient(); //이거도 있어야한다!

    //delay(~~~~) 절때 쓰면 안됨!

    //1초간격으로 뭔가 하겠다~
    if((t - last_10sec) > 1000) {
      last_10sec = millis();
      float h = dht.readHumidity();
      float t = dht.readTemperature();
      String msg = "{\"temp\":"+String(t)+",\"humi\":"+String(h)+"}";
      //{"temp":~~,"humi":~~~}
      
      webSocket.broadcastTXT(msg); //모든클라이언트에게 메시지 전송!
        
    }
}

