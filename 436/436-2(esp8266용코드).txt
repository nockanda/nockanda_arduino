
#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <WebSocketsServer.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <Hash.h>

#include <SoftwareSerial.h>
SoftwareSerial SMART_FARM(D3,D4);

#define USE_SERIAL Serial

ESP8266WiFiMulti WiFiMulti;

//웹서버의 포트는 기본 포트인 80번을 사용한다!
ESP8266WebServer server(80);
//웹서버와 웹클라이언트가 뒷구멍으로 주고받는 데이터는 웹소켓에서 81번을 쓴다!
WebSocketsServer webSocket = WebSocketsServer(81);

String response = "\
<html>\
<head>\
<meta name=\"viewport\" content=\"width=device-width\">\
<meta charset=\"utf-8\">\
<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.bundle.min.js\"></script>\
<script type=\"text/javascript\" charset=\"utf-8\" src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js\"></script>\
<script>\
  var connection = new WebSocket('ws://'+location.hostname+':81/', ['arduino']);\
  connection.onopen = function () {\
  };\
  connection.onerror = function (error) {\
     console.log('WebSocket Error ', error);\
  };\
  connection.onmessage = function (e) {\
     console.log('Server: ', e.data);\
     show_data(e.data);\
  };\
  function send_msg(){\
     connection.send('녹칸다 포에버!!!');\
  }\
  function pump_control(input){\
    connection.send(input);\
  }\
</script>\
</head>\
<body>\
     <table border=0 width=500 height=600>\
        <tr>\
            <th align=center>녹칸다의 스마트팜 예제!!</th>\
        </tr>\
        <tr>\
            <td height=300>\
                <table border=1 width=100% height=100%>\
                   <tr height=150>\
                       <td width=150>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart\"></canvas>\
  <div id=\"cap\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                       <td width=150>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart2\"></canvas>\
  <div id=\"cap2\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                       <td width=150>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart3\"></canvas>\
  <div id=\"cap3\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                   </tr>\
                   <tr height=150>\
                       <td>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart4\"></canvas>\
  <div id=\"cap4\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                       <td>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart5\"></canvas>\
  <div id=\"cap5\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                       <td>\
<div style=\"position:relative;width:150px; height:150px;\">\
  <canvas id=\"myChart6\"></canvas>\
  <div id=\"cap6\" style=\"position:absolute;top:55px;left:0px;text-align:center;width:100%;font-size:20px;font-family:Arial, sans-serif;\">\
  -\
  </div>\
</div>\
                       </td>\
                   </tr>\
                </table>\
            </td>\
        </tr>\
        <tr>\
            <td>\
                 <table border=1 width=100% height=100%>\
                      <tr height=50% align=center>\
                           <td>\
                              <button id=btn_on onClick=\"pump_control('T')\"><font size=10>펌프켜기</font></button>\
                           </td>\
                           <td>\
                              <button id=btn_off onClick=\"pump_control('F')\"><font size=10>펌프끄기</font></button>\
                           </td>\
                      </tr>\
                      <tr align=center>\
                           <th>급수량(ml)<button onClick=\"pump_control('C')\">유량초기화</button>\</th>\
                           <th>물탱크상태</th>\
                      </tr>\
                      <tr align=center>\
                           <td id=flow>-</td>\
                           <td id=tank>-</td>\
                      </tr>\
                 </table>\
            </td>\
        </tr>\
     </table>\
<script>\
var cds_max = 1023;\
var sh_max = 1023;\
var st_max = 50;\
var ah_max = 100;\
var at_max = 50;\
var co2_max = 5000;\
var ctx = document.getElementById('myChart').getContext('2d');\
var chart = new Chart(ctx, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
var ctx2 = document.getElementById('myChart2').getContext('2d');\
var chart2 = new Chart(ctx2, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
var ctx3 = document.getElementById('myChart3').getContext('2d');\
var chart3 = new Chart(ctx3, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
var ctx4 = document.getElementById('myChart4').getContext('2d');\
var chart4 = new Chart(ctx4, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
var ctx5 = document.getElementById('myChart5').getContext('2d');\
var chart5 = new Chart(ctx5, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
var ctx6 = document.getElementById('myChart6').getContext('2d');\
var chart6 = new Chart(ctx6, {\
type: 'doughnut',\
data: { labels: [0], datasets: [ { data: [0, 1], backgroundColor: ['red'], hoverBackgroundColor: [ 'red' ] }] },\
options: { \
   responsive: true, \
   legend: { display: false }, \
   elements: { center: { text: Math.round(0), fontStyle: 'Helvetica', sidePadding: 15 } }, \
   maintainAspectRatio : false, \
   cutoutPercentage:70 } \
});\
function show_data(input){\
     var data = JSON.parse(input);\
     var graph_cds = data.cds/cds_max;\
     var graph_sh = data.soil/sh_max;\
     var graph_st = (data.s_temp+10)/st_max;\
     var graph_ah = data.humi/ah_max;\
     var graph_at = (data.temp+10)/at_max;\
     var graph_co2 = data.co2/co2_max;\
     chart.data.datasets[0].data[0] = graph_cds;\
     chart.data.datasets[0].data[1] = 1-graph_cds;\
     document.getElementById(\"cap\").innerHTML = '광센서<br>'+data.cds;\
     chart.update();\
     chart2.data.datasets[0].data[0] = graph_sh;\
     chart2.data.datasets[0].data[1] = 1-graph_sh;\
     document.getElementById(\"cap2\").innerHTML = '토양습도<br>' + data.soil;\
     chart2.update();\
     chart3.data.datasets[0].data[0] = graph_st;\
     chart3.data.datasets[0].data[1] = 1-graph_st;\
     document.getElementById(\"cap3\").innerHTML = '토양온도<br>' + data.s_temp + '˚C';\
     chart3.update();\
     chart4.data.datasets[0].data[0] = graph_ah;\
     chart4.data.datasets[0].data[1] = 1-graph_ah;\
     document.getElementById(\"cap4\").innerHTML = '대기습도<br>' + data.humi + '%';\
     chart4.update();\
     chart5.data.datasets[0].data[0] = graph_at;\
     chart5.data.datasets[0].data[1] = 1-graph_at;\
     document.getElementById(\"cap5\").innerHTML = '대기온도<br>' + data.temp + '%';\
     chart5.update();\
     chart6.data.datasets[0].data[0] = graph_co2;\
     chart6.data.datasets[0].data[1] = 1-graph_co2;\
     document.getElementById(\"cap6\").innerHTML = 'Co2농도<br>' + data.co2 + 'PPM';\
     chart6.update();\
     if(data.pump == '0'){\
         document.getElementById(\"btn_off\").style.backgroundColor = 'red';\
         document.getElementById(\"btn_on\").style.backgroundColor = 'Powderblue';\
     }else if(data.pump == '1'){\
         document.getElementById(\"btn_off\").style.backgroundColor = 'Powderblue';\
         document.getElementById(\"btn_on\").style.backgroundColor = 'green';\
     }\
     document.getElementById(\"flow\").innerText = data.flow;\
     if(data.tank == 0){\
       document.getElementById(\"tank\").innerText = \"부족\";\
     }else if(data.tank == 1){\
       document.getElementById(\"tank\").innerText = \"적정\";\
     }else if(data.tank == 2){\
       document.getElementById(\"tank\").innerText = \"넘침\";\
     }\
data.tank;\
  }\
</script>\
</body>\
</html>";


//클라이언트에서 서버쪽으로 값이 전송되었을때 뭘할거냐?
void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {

    switch(type) {
        case WStype_DISCONNECTED:
            USE_SERIAL.printf("[%u] Disconnected!\n", num);
            break;
        case WStype_CONNECTED: {
            IPAddress ip = webSocket.remoteIP(num);
            USE_SERIAL.printf("[%u] Connected from %d.%d.%d.%d url: %s\n", num, ip[0], ip[1], ip[2], ip[3], payload);

            //num = 소켓번호(클라이언트번호)
            //webSocket.sendTXT(num, "Connected");
        }
            break;
        case WStype_TEXT:
        //메시지 수신부
            USE_SERIAL.printf("[%u] get Text: %s\n", num, payload);
            //payload[0] // C T F
            //웹소켓클라이언트에서 웹소켓서버쪽으로 날라온 1개의 문자를
            //시리얼통신으로 아두이노 우노쪽으로 그대~~로 전송한다!
            SMART_FARM.write(payload[0]);
            break;
    }

}

void setup() {
    //USE_SERIAL.begin(921600);
    USE_SERIAL.begin(115200);
    SMART_FARM.begin(9600); //아두이노 우노
    
    //USE_SERIAL.setDebugOutput(true);

    USE_SERIAL.println();
    USE_SERIAL.println();
    USE_SERIAL.println();

    for(uint8_t t = 4; t > 0; t--) {
        USE_SERIAL.printf("[SETUP] BOOT WAIT %d...\n", t);
        USE_SERIAL.flush();
        delay(1000);
    }

    //자기자신의 IP공유기 ID비밀번호 집어넣는곳!
    WiFiMulti.addAP("popcorn", "11213144");

    while(WiFiMulti.run() != WL_CONNECTED) {
        delay(100);
    }

    //IP공유기로부터 할당받은 IP주소를 여기서 출력한다!
    USE_SERIAL.println("IP address: ");
    USE_SERIAL.println(WiFi.localIP());
  
    //웹소켓 서버를 연다
    webSocket.begin();
    webSocket.onEvent(webSocketEvent);

    //윈도우10, 안드로이드 안됨..의미없는 기능
    if(MDNS.begin("esp8266")) {
        USE_SERIAL.println("MDNS responder started");
    }

    //웹서버의 index.html
    //웹서버가 클라이언트에게 response해주는 부분!

    server.on("/", []() {
        server.send(200, "text/html", response);
    });

    server.begin();

    // Add service to MDNS
    MDNS.addService("http", "tcp", 80);
    MDNS.addService("ws", "tcp", 81);
}

unsigned long last_10sec = 0;
unsigned int counter = 0;

void loop() {
    unsigned long t = millis();
    webSocket.loop(); //이거 있어야한다!
    server.handleClient(); //이거도 있어야한다!

    //아두이노 우노와 연결해서 데이터를 전달받는다
    //전달받은 데이터를 웹소켓 클라이언트에게 전송해준다(원형 그대로)
    if(SMART_FARM.available()){
      //아두이노 우노가 뭔가 전송했다!
      String data = SMART_FARM.readStringUntil('\n'); //readLine();
      //Serial.println(data);
      webSocket.broadcastTXT(data);
    }
}

