
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define pump D3
#define flow D4
#define min_level D5
#define max_level D6

// Update these with values suitable for your network.

const char* ssid = "popcorn";
const char* password = "11213144";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE  (50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

volatile double water = 0;
bool limit_mode = false;
double limit_value = 0; 

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  String data;
  for (int i = 0; i < length; i++) {
    data += (char)payload[i];
    Serial.print((char)payload[i]);
  }
  Serial.println();

  String mytopic = topic;

  if(mytopic == "nockanda/waterpump"){
    if((char)payload[0] == '0'){
      //워터펌프를 끄시오!
      digitalWrite(pump,LOW);
    }else{
      //워터펌프를 켜시오!
      digitalWrite(pump,HIGH);
    }
  }else if(mytopic == "nockanda/waterclear"){
    water =0;
  }else if(mytopic == "nockanda/waterlimit"){
    //payload로 유저가 보낸 물의 용량만큼 물을 주고 펌프를 멈춘다!
    //data.toInt();
    //목표로 하는 물의 용량을 계산을!
    digitalWrite(pump,HIGH);
    limit_value = water + data.toInt();
    limit_mode = true;
  }

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("outTopic", "hello world");
      // ... and resubscribe
      client.subscribe("nockanda/waterpump");
      client.subscribe("nockanda/waterclear");
      client.subscribe("nockanda/waterlimit");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);     // Initialize the BUILTIN_LED pin as an output
  Serial.begin(115200);
  pinMode(pump,OUTPUT);
  pinMode(flow,INPUT);
  pinMode(min_level,INPUT);
  pinMode(max_level,INPUT);
  attachInterrupt(digitalPinToInterrupt(flow), flowsensor, FALLING);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  if(limit_mode){
    //일정량 물주기 모드!
    if(limit_value < water){
      //펌프 멈춤
      digitalWrite(pump,LOW);
      limit_mode = false;
    }
  }

  unsigned long now = millis();
  if (now - lastMsg > 1000) {
    lastMsg = now;
    ++value;

    //수위센서의 결과를 읽어온다!
    bool level1 = digitalRead(min_level);
    bool level2 = digitalRead(max_level);
    String result;
    if(level1 == LOW && level2 == LOW){
      //물이 부족한경우
      //client.publish("nockanda/waterlevel", "물부족!");
      result = "물부족!,";
    }else if(level1 == HIGH && level2 == LOW){
      //물이 적당한 경우
      //client.publish("nockanda/waterlevel", "적정용량!");
      result = "적정용량!,";
    }else if(level1 == HIGH && level2 == HIGH){
      //물이 넘쳐나는 경우
      //client.publish("nockanda/waterlevel", "과용량!");
      result = "과용량!,";
    }

    bool pump_state = digitalRead(pump);
    if(pump_state == LOW){
      //펌프 OFF
      result += "펌프꺼짐!,";
    }else {
      //펌프 ON
      result += "펌프켜짐!,";
    }
    
    result += String(water);
    client.publish("nockanda/board3", result.c_str());
  }
}

ICACHE_RAM_ATTR void flowsensor(){
  water += (1/5888.0)*1000; //단위mL
}
