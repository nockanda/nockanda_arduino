/*
 * 예제124-2-1 (마스터코드)
 * Request*Response 기능을 강화하기 위한 V2코드
 * 마스터가 슬레이브들에게 패킷을 전송한다음 수신할때 까지 기다린다.
 * 일정시간동안 슬레이브가 동작하지 않을경우 오프라인으로 처리한다.
 * 디지털 4,5,6,7번 핀에 LED를 배치하시오
 * 4,5에 각각 녹색, 빨간색
 * 6,7에 각각 녹색, 빨간색
 * 슬레이브1이 온라인이면 4번(녹색)켜짐, 오프라인이면 5번(적색)켜짐
 * 슬레이브2가 온라인이면 6반(녹색)켜짐, 오프라인이면 7번(적색)켜짐
 */

#include <SoftwareSerial.h>
#define master 0x99 //153
#define slave1 0x00 //0
#define slave2 0x01 //1
#define command1 0x01
#define command2 0x02
#define modepin 13
#define readmode LOW
#define sendmode HIGH
#define slave1on 4
#define slave1off 5
#define slave2on 6
#define slave2off 7
SoftwareSerial rs485(2, 3); // RX, TX

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //PC-아두이노간 TTL통신
  rs485.begin(9600); //아두이노-rs485간 TTL통신
  pinMode(modepin,OUTPUT); //송수신제어핀
  digitalWrite(modepin,readmode); //수신모드
  pinMode(slave1on,OUTPUT);
  pinMode(slave1off,OUTPUT);
  pinMode(slave2on,OUTPUT);
  pinMode(slave2off,OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:

  //슬레이브1에게 보내는 부분(request)
  byte message[8]={0};
  rs485_send(slave1,command1,message);

  byte recv[10];
  if(rs485_receive(recv) == -1){
    Serial.println("슬레이브1 오프라인");
    digitalWrite(slave1on, LOW);
    digitalWrite(slave1off, HIGH);
  }else{
    digitalWrite(slave1on, HIGH);
    digitalWrite(slave1off, LOW);
    for(int i = 0;i<10;i++){
      Serial.print(recv[i],HEX);
      Serial.print(",");
    }
    Serial.println();
  }
  
  delay(1000);

  message[8]={0};
  rs485_send(slave2,command1,message);

  recv[10];
  if(rs485_receive(recv) == -1){
    Serial.println("슬레이브2 오프라인");
    digitalWrite(slave2on, LOW);
    digitalWrite(slave2off, HIGH);
  }else{
    digitalWrite(slave2on, HIGH);
    digitalWrite(slave2off, LOW);
    for(int i = 0;i<10;i++){
      Serial.print(recv[i],HEX);
      Serial.print(",");
    }
    Serial.println();
  }
  
  delay(1000);
}

void rs485_send(byte id, byte command, byte message[]){
  byte data[10];
  data[0] = id;
  data[1] = command;
  for(int i =2;i<10;i++){
    data[i] = message[i-2];
  }
  //단순 결과확인 출력문
  Serial.print("(마스터)송신데이터=");
  for(int i = 0;i<10;i++){
    Serial.print(data[i]);
    Serial.print(",");
  }
  Serial.println();

  //송신부분
  digitalWrite(modepin,sendmode);
  rs485.write(data,10);
  digitalWrite(modepin,readmode);
}

int rs485_receive(byte recv[]){
  //슬레이브1에서 날린 데이터가 존재할때까지 무한루프
  unsigned long t = millis(); //루프진입직전의 시간
  while(1){
    if(millis() - t > 2000){
      //루프안에서 누른 스톱워치하고 t하고의 시간차이가 2000ms 이상이면~
      //Serial.println("오프라인");
      return -1;
      break;
    }
    if(rs485.available()){
      //485모듈에서 아두이노쪽으로 수신한값이 존재한다면~
      //데이터 읽기
      rs485.readBytes(recv,10);
      /*
      Serial.print("(마스터)수신데이터=");
      for(int i =0;i<10;i++){
        Serial.print(recv[i],HEX);
        Serial.print(",");
      }
      Serial.println();
      */
      return 0;
      break;
    }
  }
}
