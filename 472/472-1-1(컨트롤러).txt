#include <ESP8266WiFi.h>
#include <espnow.h>

byte slave_mac1[] = {0x40,0x91,0x51,0x4D,0xB5,0xCC}; //11
byte slave_mac2[] = {0x40,0x91,0x51,0x4E,0x34,0x3F}; //12
byte slave_mac3[] = {0x40,0x91,0x51,0x4D,0xDC,0x51}; //13

unsigned long t = 0;

void setup() {
  // put your setup code here, to run once:

  Serial.begin(115200);
  
  WiFi.mode(WIFI_STA); //제일 처음 할일! 와이파이모드를 스테이션 모드로!

  //ESPNOW의 기능을 활성화한다!
  if (esp_now_init() != 0) {
    //ESP NOW 시작 실패!
    Serial.println("ESPNOW 실패!");
    return;
  }else{
     //ESP NOW 시작 성공!
     Serial.println("ESPNOW 성공!");
  }

  //지금 이보드의 역할은 컨트롤러이다!
  esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);

  //나의 슬레이브를 등록해야겠다!
  esp_now_add_peer(slave_mac1, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);
  esp_now_add_peer(slave_mac2, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);
  esp_now_add_peer(slave_mac3, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);

  //송신완료 콜백함수 등록
  esp_now_register_send_cb(OnDataSent);
}

void loop() {
  // put your main code here, to run repeatedly:
  //녹칸다에게 시리얼입력을 받으시오!
  if(Serial.available()){
    String data = Serial.readStringUntil('\r'); //캐리지리턴
    //10, 11
    if(data[0] == '1'){
      //보드1번
      if(data[1] == '0'){
        char c = '0';
        esp_now_send(slave_mac1, (uint8_t *) &c, sizeof(c));
      }else if(data[1] == '1'){
        char c = '1';
        esp_now_send(slave_mac1, (uint8_t *) &c, sizeof(c));
      }
    }else if(data[0] == '2'){
      //보드2번
      if(data[1] == '0'){
        char c = '0';
        esp_now_send(slave_mac2, (uint8_t *) &c, sizeof(c));
      }else if(data[1] == '1'){
        char c = '1';
        esp_now_send(slave_mac2, (uint8_t *) &c, sizeof(c));
      }
    }else if(data[0] == '3'){
      //보드3번
      if(data[1] == '0'){
        char c = '0';
        esp_now_send(slave_mac3, (uint8_t *) &c, sizeof(c));
      }else if(data[1] == '1'){
        char c = '1';
        esp_now_send(slave_mac3, (uint8_t *) &c, sizeof(c));
      }
    }
  }
  /*
  if(millis() - t > 2000){
    t = millis();
    //2초마다 한번씩 하겠다!
    esp_now_send(slave_mac, (uint8_t *) &data, sizeof(data));
  }*/
}

//송신콜백함수 원형:
void OnDataSent(uint8_t *mac, uint8_t status) {
   //status가 0일때 송신 완료!
   if(status == 0){
      Serial.println("성공적으로 송신했음!");
   }else{
      Serial.println("송신 실패!!");
   }
}

