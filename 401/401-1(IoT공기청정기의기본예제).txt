//1602LCD부분
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);  //1602LCD


//미세먼지센서부분
#include "PMS.h"
#include <SoftwareSerial.h>
SoftwareSerial nockanda(D6,D7); //tx=D6, rx=D7
PMS pms(nockanda);
PMS::DATA data;

int on_value = 30; //150 조정필요!
int off_value = 10; //30 조정필요!
int dust_value = 0;
bool is_auto_run = false;

//버튼을 디지털 2번핀에 연결하라!
#define button D5

//모스펫을 3번핀에 연결하라!(아날로그제어)
#define mosfet D10

//모드가 총 4가지가있다
//off - 1단 - 2단 - 3단 - Auto
int mode = 0;

//미세먼지센서를 1초에한번 실행하려면 어떻게 해야하겠는가?
unsigned long t = 0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //결과를 PC에서 보겠다!
  pinMode(button,INPUT_PULLUP); //버튼을 연결했다

  //미세먼지센서부분
  nockanda.begin(9600);  //미세먼지-아두이노간
  pms.passiveMode(); 

  //lCD초기화
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("DUST=0");
  lcd.setCursor(0,1);
  lcd.print("MOTOR=OFF");
}

void loop() {
  // put your main code here, to run repeatedly:
  if(is_auto_run){
    //현재 오토모드를 유저가 선택한 상태다!
    if(dust_value > on_value){
      //미세먼지 농도가 상한값을 초과했다
      //공기청정기팬 작동!
      analogWrite(mosfet,1023); //팬작동
    }else if(dust_value < off_value){
      //미세먼지 농도가 하한값 미만이다
      //공기청정기 팬 멈춤!
      analogWrite(mosfet,0); //팬멈춤
    }
  }

  //버튼이 눌려지면 뭔가 하겠다~~
  if(digitalRead(button) == LOW){
    //버튼이 눌려졌다~
    mode++;
    if(mode > 4){
      mode = 0;
    }

    if(mode == 0){
      //끄면된다
      is_auto_run = false;
      analogWrite(mosfet,0); //0V
      Serial.println("공기청정기를 OFF합니다");
      lcd.setCursor(0,1);
      lcd.print("MOTOR=OFF     ");
    }else if(mode == 1){
      analogWrite(mosfet,800);
      Serial.println("공기청정기를 1단으로 작동합니다!");
      lcd.setCursor(0,1);
      lcd.print("MOTOR=1DAN    ");
    }else if(mode == 2){
      analogWrite(mosfet,900);
      Serial.println("공기청정기를 2단으로 작동합니다!");
      lcd.setCursor(0,1);
      lcd.print("MOTOR=2DAN    ");
    }else if(mode == 3){
      analogWrite(mosfet,1023); //5V
      Serial.println("공기청정기를 3단으로 작동합니다!");
      lcd.setCursor(0,1);
      lcd.print("MOTOR=3DAN    ");
    }else if(mode == 4){
      is_auto_run = true;
      analogWrite(mosfet,0); //일단 멈추고 조건을 본다!
      Serial.println("공기청정기를 Auto모드로 작동합니다!");
      lcd.setCursor(0,1);
      lcd.print("MOTOR=AUTO    ");
    }
    delay(300); //버튼이 너무 많이 눌려지는것을 막기위해서
  }

  if(millis() - t > 1000){
    t = millis();
    pms.requestRead();
    if (pms.readUntil(data))
    {
      dust_value = data.PM_AE_UG_2_5;
      Serial.print("PM 2.5 (ug/m3): ");
      Serial.println(dust_value);
      //LCD의 첫번째줄에 미세먼지 농도를 프린트할것
      lcd.setCursor(0,0);
      lcd.print("DUST=");
      lcd.print(dust_value);
      lcd.print("    ");
    }
    else
    {
      Serial.println("No data.");
    }
  }

}