/*
 * 예제143-2 LED 6개를 아두이노에 연결한다.
 * LED는 노란색2개 오렌지색2개 빨간색 2개이다.
 * 각LED는 20씩값을 담당하고 예를 들면 아래와 같다.
 * 20 40 60 80 100 120
 * PPM값이 120을 넘어가면 그냥 max처리해서 120으로 한다.
 * 그리고 PPM이 100일때 경고상황으로 처리하자!
 */
#include <MQUnifiedsensor.h>

//Definitions
#define placa "Arduino UNO"
#define Voltage_Resolution 5
#define pin A0 //Analog input 0 of your arduino
#define type "MQ-6" //MQ6
#define ADC_Bit_Resolution 10 // For arduino UNO/MEGA/NANO
#define RatioMQ6CleanAir 10   //RS / R0 = 10 ppm 

byte led_pin[] = {2,3,4,5,6,7};

//Declare Sensor
MQUnifiedsensor MQ6(placa, Voltage_Resolution, ADC_Bit_Resolution, pin, type);

void setup() {
  //Init the serial port communication - to debug the library
  Serial.begin(9600); //Init serial port

  for(int i = 0;i<6;i++){
    pinMode(led_pin[i], OUTPUT);
  }

  //Set math model to calculate the PPM concentration and the value of constants
  MQ6.setRegressionMethod(1); //_PPM =  a*ratio^b
  MQ6.setA(2127.2); MQ6.setB(-2.526); // Configurate the ecuation values to get CH4 concentration
  /*
    Exponential regression:
  GAS     | a      | b
  H2      | 88158  | -3.597
  LPG     | 1009.2 | -2.35
  CH4     | 2127.2 | -2.526
  CO      | 1000000000000000 | -13.5
  Alcohol | 50000000 | -6.017
  */
  
  /*****************************  MQ Init ********************************************/ 
  //Remarks: Configure the pin of arduino as input.
  /************************************************************************************/ 
  MQ6.init();   
  /* 
    //If the RL value is different from 10K please assign your RL value with the following method:
    MQ6.setRL(10);
  */
  /*****************************  MQ CAlibration ********************************************/ 
  // Explanation: 
  // In this routine the sensor will measure the resistance of the sensor supposing before was pre-heated
  // and now is on clean air (Calibration conditions), and it will setup R0 value.
  // We recomend execute this routine only on setup or on the laboratory and save on the eeprom of your arduino
  // This routine not need to execute to every restart, you can load your R0 if you know the value
  // Acknowledgements: https://jayconsystems.com/blog/understanding-a-gas-sensor
  Serial.print("Calibrating please wait.");
  float calcR0 = 0;
  for(int i = 1; i<=10; i ++)
  {
    MQ6.update(); // Update data, the arduino will be read the voltage on the analog pin
    calcR0 += MQ6.calibrate(RatioMQ6CleanAir);
    Serial.print(".");
  }
  MQ6.setR0(calcR0/10);
  Serial.println("  done!.");
  
  if(isinf(calcR0)) {Serial.println("Warning: Conection issue founded, R0 is infite (Open circuit detected) please check your wiring and supply"); while(1);}
  if(calcR0 == 0){Serial.println("Warning: Conection issue founded, R0 is zero (Analog pin with short circuit to ground) please check your wiring and supply"); while(1);}
  /*****************************  MQ CAlibration ********************************************/ 
  MQ6.serialDebug(true);
}

void loop() {
  MQ6.update(); // Update data, the arduino will be read the voltage on the analog pin
  float ppm = MQ6.readSensor(); // Sensor will read PPM concentration using the model and a and b values setted before or in the setup
  int count = 0;
  if(ppm <= 20){
    count = 1;
  }else if(ppm <= 40){
    count = 2;
  }else if(ppm <= 60){
    count = 3;
  }else if(ppm <= 80){
    count = 4;
  }else if(ppm <= 100){
    count = 5;
  }else if(ppm > 100){
    count = 6;
  }
  for(int i = 0;i<6;i++){
    if(count > i){
      digitalWrite(led_pin[i],HIGH);
    }else{
      digitalWrite(led_pin[i],LOW);
    }
  }
  
  Serial.print("PPM=");
  Serial.println(ppm);
  delay(500); //Sampling frequency
}