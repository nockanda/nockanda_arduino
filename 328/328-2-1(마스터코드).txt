#include <SPI.h>              // include libraries
#include <LoRa.h>

String outgoing;              // outgoing message
unsigned long t = 0;

void setup() {
  Serial.begin(9600); //결과를 PC에 출력하기위한
  Serial.println("LoRa Duplex");

  //920.9Mhz
  if (!LoRa.begin(9209E5)) {             // initialize ratio at 915 MHz
    Serial.println("LoRa init failed. Check your connections.");
    while (true);                       // if failed, do nothing
  }

  Serial.println("LoRa init succeeded.");
}

void loop() {
  String message = "Request";   // send a message

    //메시지 전송부분
    LoRa.beginPacket();
    LoRa.print(message);
    LoRa.endPacket();

    Serial.println("발신메시지: " + message);


    //response를 기다린다
    t = millis();
    bool is_timeout = false;
    while(!LoRa.parsePacket()){
      if(millis() - t > 3000){
        Serial.println("타임아웃!");
        is_timeout = true;
        break;
      }
    }
    if(is_timeout) return;
    
    Serial.println("메시지 수신완료");
  
    String incoming = "";

    byte message_length = LoRa.read();
    
    //수신된 데이터 전체를 읽어서 incoming이라는 변수에 집어넣어라
    while (LoRa.available()) {
      incoming += (char)LoRa.read();
    }

    if(message_length != incoming.length()){
      //내가 원하는 결과가 아닌
      Serial.println("내가 원한느 결과가 아니다!");
    }else{
      Serial.println(incoming);
    }
    
  
  //onReceive(LoRa.parsePacket());
}


void onReceive(int packetSize) {
  if (packetSize == 0) return; //수신데이터가 없으면 아무일도 하지 않음!

  String incoming = "";

  //수신된 데이터 전체를 읽어서 incoming이라는 변수에 집어넣어라
  while (LoRa.available()) {
    incoming += (char)LoRa.read();
  }
  Serial.println("수신메시지: " + incoming);
}
