/*
  예제 244-3-2 리시버용 아두이노 코드!
  아두이노에 모터드라이버(L298N)를 2번째모터핀에 연결했다!
  제어핀은 IN3,IN4,ENB를 사용한다!
  트랜스미터에서 날라오는 10비트 아날로그값을 이용해서 모터드라이버를 제어하라!
 */
#include <SPI.h>
#include "RF24.h"

#define IN3 5 //디지털제어
#define IN4 4 //디지털제어
#define ENB 3 //아날로그제어

RF24 radio(9, 10); //CE, SS

uint8_t address[6] = "00001";

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200); //PC와 아두이노간 통신라인
  radio.begin(); //아두이노-RF모듈간 통신라인
  radio.setPALevel(RF24_PA_LOW); 
  radio.openReadingPipe(0, address);
  radio.startListening();

  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  if (radio.available()){
    //RF무선모듈쪽으로 뭔가 수신된값이 존재한다면~
    int recv;
    radio.read(&recv,sizeof(recv));
    Serial.println(recv);
    //값을 필요에 맞게 분해 해보자!
    //일단 아무것도 하지 않는 범위(412~612)
    //양의방향으로 속도제어하는 값(612~1023)
    //음의방향으로 속도제어하는 값(0~412) -> (412-값)
    if(recv>412 && recv<612){
      //브레이크 걸기
      digitalWrite(IN3,LOW);
      digitalWrite(IN4,LOW);
    }else if(recv >= 612){
      //양의방향
      digitalWrite(IN3,LOW);
      digitalWrite(IN4,HIGH);
      //아날로그 입력으로 사용되는 값이 0~255
      //612~1023의 값을 0~255사이의 값으로 mapping
      byte nock = map(recv,612,1023,0,255);
      analogWrite(ENB,nock);
    }else if(recv <= 412){
      //음의방향
      digitalWrite(IN3,HIGH);
      digitalWrite(IN4,LOW);
      byte nock = map(412-recv,0,412,0,255);
      analogWrite(ENB,nock);
    }
    
  }
}