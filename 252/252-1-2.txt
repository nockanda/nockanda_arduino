/*
  예제 252-1-2 2.4G RF모듈(nRF24L01)을 이용한 트랜스미터 예제!
 */

#include <SPI.h>
#include "RF24.h"
#include <MQUnifiedsensor.h>
/************************Hardware Related Macros************************************/
#define         Board                   ("Arduino UNO")
#define         Pin                     (A0)  //Analog input 3 of your arduino
/***********************Software Related Macros************************************/
#define         Type                    ("MQ-3") //MQ3
#define         Voltage_Resolution      (5)
#define         ADC_Bit_Resolution      (10) // For arduino UNO/MEGA/NANO
#define         RatioMQ3CleanAir        (60) //RS / R0 = 60 ppm 
/*****************************Globals***********************************************/
//Declare Sensor
MQUnifiedsensor MQ3(Board, Voltage_Resolution, ADC_Bit_Resolution, Pin, Type);


RF24 radio(9, 10); //CE, SS

uint8_t address1[6] = "00001";
uint8_t address2[6] = "10002";

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200); //PC와 아두이노간 통신라인
  MQ3.setRegressionMethod(1);
  MQ3.setA(4.8387); MQ3.setB(-2.68);
  MQ3.init(); 
  radio.begin(); //아두이노-RF모듈간 통신라인
  radio.setPALevel(RF24_PA_LOW); 
  radio.openWritingPipe(address1);
  radio.stopListening();

  Serial.print("Calibrating please wait.");
  float calcR0 = 0;
  for(int i = 1; i<=10; i ++)
  {
    MQ3.update(); // Update data, the arduino will be read the voltage on the analog pin
    calcR0 += MQ3.calibrate(RatioMQ3CleanAir);
    Serial.print(".");
  }
  MQ3.setR0(calcR0/10);
  Serial.println("  done!.");
}

void loop() {
  // put your main code here, to run repeatedly:
  MQ3.update();
  float data = MQ3.readSensor();
  radio.write(&data,sizeof(data));
  delay(100);
}