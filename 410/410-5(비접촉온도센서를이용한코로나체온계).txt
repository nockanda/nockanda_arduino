
#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <WebSocketsServer.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <Hash.h>
#include <Wire.h>
#include <Adafruit_MLX90614.h>
Adafruit_MLX90614 mlx = Adafruit_MLX90614();

#define USE_SERIAL Serial

ESP8266WiFiMulti WiFiMulti;

//웹서버의 포트는 기본 포트인 80번을 사용한다!
ESP8266WebServer server(80);
//웹서버와 웹클라이언트가 뒷구멍으로 주고받는 데이터는 웹소켓에서 81번을 쓴다!
WebSocketsServer webSocket = WebSocketsServer(81);

String response = "\
<html>\
<head>\
<meta name=\"viewport\" content=\"width=device-width\">\
<meta charset=\"utf-8\">\
<script>\
  var connection = new WebSocket('ws://'+location.hostname+':81/', ['arduino']);\
  connection.onopen = function () {\
     connection.send('Connect ' + new Date());\
  };\
  connection.onerror = function (error) {\
     console.log('WebSocket Error ', error);\
  };\
  connection.onmessage = function (e) {\
     console.log('Server: ', e.data);\
     var mydata = JSON.parse(e.data);\
     if(mydata.type == 'start'){\
       document.getElementById('detect').innerText = '측정이 시작되었습니다!';\
     }else if(mydata.type == 'end'){\
       document.getElementById('detect').innerText = '측정이 완료되었습니다!';\
       document.getElementById('ot').innerText = mydata.ot;\
       if(mydata.ot >= 35 && mydata.ot<=38){\
         document.getElementById('result').innerText = '입장해도 좋습니다!!';\
       }else{\
         document.getElementById('result').innerText = '집에가십시요!!';\
       }\
     }else if(mydata.type == 'next'){\
       document.getElementById('detect').innerText = '기계에서 벗어나십시요!';\
     }\
  };\
  function send_msg(){\
     connection.send('녹칸다 포에버!!!');\
  }\
  function set_zero(){\
     connection.send('0');\
  }\
</script>\
</head>\
<body>\
<table border=1 width=300 height=300>\
  <tr align=center>\
    <td colspan=2>녹칸다의 체온측정기!</td>\
  </tr>\
  <tr align=center>\
    <td width=50%>감지여부</td>\
    <td width=50% id=detect>-</td>\
  </tr>\
  <tr align=center>\
    <td width=50%>측정온도</td>\
    <td width=50% id=ot>-</td>\
  </tr>\
  <tr align=center>\
    <td colspan=2 id=result>-</td>\
  </tr>\
</table>\
</body>\
</html>";


//클라이언트에서 서버쪽으로 값이 전송되었을때 뭘할거냐?
void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {

    switch(type) {
        case WStype_DISCONNECTED:
            USE_SERIAL.printf("[%u] Disconnected!\n", num);
            break;
        case WStype_CONNECTED: {
            IPAddress ip = webSocket.remoteIP(num);
            USE_SERIAL.printf("[%u] Connected from %d.%d.%d.%d url: %s\n", num, ip[0], ip[1], ip[2], ip[3], payload);

            //num = 소켓번호(클라이언트번호)
            //webSocket.sendTXT(num, "Connected");
        }
            break;
        case WStype_TEXT:
        //메시지 수신부
            USE_SERIAL.printf("[%u] get Text: %s\n", num, payload);
            break;
    }

}

void setup() {
    //USE_SERIAL.begin(921600);
    USE_SERIAL.begin(115200);
    mlx.begin();  
    //USE_SERIAL.setDebugOutput(true);

    USE_SERIAL.println();
    USE_SERIAL.println();
    USE_SERIAL.println();

    for(uint8_t t = 4; t > 0; t--) {
        USE_SERIAL.printf("[SETUP] BOOT WAIT %d...\n", t);
        USE_SERIAL.flush();
        delay(1000);
    }

    //자기자신의 IP공유기 ID비밀번호 집어넣는곳!
    WiFiMulti.addAP("popcorn", "11213144");

    while(WiFiMulti.run() != WL_CONNECTED) {
        delay(100);
    }

    //IP공유기로부터 할당받은 IP주소를 여기서 출력한다!
    USE_SERIAL.println("IP address: ");
    USE_SERIAL.println(WiFi.localIP());
  
    //웹소켓 서버를 연다
    webSocket.begin();
    webSocket.onEvent(webSocketEvent);

    //윈도우10, 안드로이드 안됨..의미없는 기능
    if(MDNS.begin("esp8266")) {
        USE_SERIAL.println("MDNS responder started");
    }

    //웹서버의 index.html
    //웹서버가 클라이언트에게 response해주는 부분!

    server.on("/", []() {
        server.send(200, "text/html", response);
    });

    server.begin();

    // Add service to MDNS
    MDNS.addService("http", "tcp", 80);
    MDNS.addService("ws", "tcp", 81);
}

unsigned long last_10sec = 0;
unsigned int counter = 0;

int mode = 0;
float ot_ave = 0;
int ot_count = 0;
unsigned long ot_time = 0;

void loop() {
    unsigned long t = millis();
    webSocket.loop(); //이거 있어야한다!
    server.handleClient(); //이거도 있어야한다!

    //delay(~~~~) 절때 쓰면 안됨!

    //10초간격으로 뭔가 하겠다~
    if((t - last_10sec) > 500) {
      last_10sec = millis();
      float AT = mlx.readAmbientTempC()+17;
      float OT = mlx.readObjectTempC()+17;

      if(mode == 0){
        //대기모드
        if(abs(AT-OT) > 3){
          //뭔가 나타났다
          //클라이언트에게 측정이 시작되었음을 알린다
          String msg = "{\"type\":\"start\"}";
          webSocket.broadcastTXT(msg);
          mode = 1;
          ot_ave = 0;
          ot_count = 0;
          ot_time = millis();
        }
      }else if(mode == 1){
        //3초동안 샘플을 모은다!
        ot_ave += OT;
        ot_count++;
        if(millis() - ot_time > 3000){
           // 
           String msg = "{\"type\":\"end\", \"ot\":"+String(ot_ave/ot_count)+"}";
           webSocket.broadcastTXT(msg);
           ot_time = millis();
           mode=2;
        }
      }else if(mode == 2){
        //2초정도 쉰다
        String msg = "{\"type\":\"next\"}";
        webSocket.broadcastTXT(msg);
        if(millis() - ot_time > 2000){
          mode=0;
        }
      }

      /*
      String msg;
      if(abs(AT-OT) > 5){
        //뭔가... 앞에 있는거 같은데...
        msg = "{\"detect\":1,\"ot\":"+String(OT)+"}";
      }else{
        msg = "{\"detect\":0,\"ot\":"+String(OT)+"}";
      }
      webSocket.broadcastTXT(msg); //모든클라이언트에게 메시지 전송!  
      */
    }
}

