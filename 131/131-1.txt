/*
 * 131-1 플스2 조이스틱가지고 하는 녹칸다의 호작질
 * 조이스틱의 방향키를 이용해서 2축 서보모터를 제어해보자!
 * 서보모터는 D5,D6에 각각 연결해서 사용해보자!
 *   ↑             세모
 * ←  →         네모  동그라미
 *   ↓              엑스
 * 방향키가지고 컨트롤해보자!
 * 위아래는 2번서보모터각도제어 좌우는 1번서보모터각도제어
 * (1번 서보)동그라미를 누르면 각도변화량이 증가하고 네모를 누르면 감소한다.
 * (2번 서보)세모를 누르면 각도 변화량이 증가하고 엑스를 누르면 각도변화량이 감소한다
 * (최소값 1 최대값 10으로 설정하라)
 */
#include <PS2X_lib.h>
#include <Servo.h>
#define PS2_DAT        13  //14    
#define PS2_CMD        11  //15
#define PS2_SEL        10  //16
#define PS2_CLK        12  //17
#define pressures   false
#define rumble      false
#define servo1 5
#define servo2 6

Servo myservo1;
Servo myservo2;
byte degree1=0;
byte degree2=0;
byte degree11 = 1;
byte degree21 = 1;

PS2X ps2x;
int error = 0;
byte vibrate = 0;
void setup() {
  // put your setup code here, to run once:
  Serial.begin(57600);
  myservo1.attach(servo1);
  myservo2.attach(servo2);
  delay(300);
  error = ps2x.config_gamepad(PS2_CLK, PS2_CMD, PS2_SEL, PS2_DAT, pressures, rumble);
}

void loop() {
  if(error == 1) //skip loop if no controller found
    return;
  // put your main code here, to run repeatedly:
  ps2x.read_gamepad(false, vibrate); //read controller and set large motor to spin at 'vibrate' speed
    
    if(ps2x.Button(PSB_START))         //will be TRUE as long as button is pressed
      Serial.println("Start is being held");
    if(ps2x.Button(PSB_SELECT))
      Serial.println("Select is being held");      

    if(ps2x.Button(PSB_PAD_UP)) {      //will be TRUE as long as button is pressed
      Serial.println("Up held this hard: ");
      degree1+=degree11;
      //Serial.println(ps2x.Analog(PSAB_PAD_UP), DEC);
    }
    if(ps2x.Button(PSB_PAD_RIGHT)){
      Serial.println("Right held this hard: ");
      degree2+=degree21;
      //Serial.println(ps2x.Analog(PSAB_PAD_RIGHT), DEC);
    }
    if(ps2x.Button(PSB_PAD_LEFT)){
      Serial.println("LEFT held this hard: ");
      degree2-=degree21;
      //Serial.println(ps2x.Analog(PSAB_PAD_LEFT), DEC);
    }
    if(ps2x.Button(PSB_PAD_DOWN)){
      Serial.println("DOWN held this hard: ");
      degree1-=degree11;
      //Serial.println(ps2x.Analog(PSAB_PAD_DOWN), DEC);
    }   

    vibrate = ps2x.Analog(PSAB_CROSS);  //this will set the large motor vibrate speed based on how hard you press the blue (X) button
    if (ps2x.NewButtonState()) {        //will be TRUE if any button changes state (on to off, or off to on)
      if(ps2x.Button(PSB_L3))
        Serial.println("L3 pressed");
      if(ps2x.Button(PSB_R3))
        Serial.println("R3 pressed");
      if(ps2x.Button(PSB_L2))
        Serial.println("L2 pressed");
      if(ps2x.Button(PSB_R2))
        Serial.println("R2 pressed");
      if(ps2x.Button(PSB_TRIANGLE))
        Serial.println("Triangle pressed");  
        degree21++;      
      }

    if(ps2x.ButtonPressed(PSB_CIRCLE)){               //will be TRUE if button was JUST pressed
      Serial.println("Circle just pressed");
      degree11++;
    }
    if(ps2x.NewButtonState(PSB_CROSS)){               //will be TRUE if button was JUST pressed OR released
      Serial.println("X just changed");
      degree21--;
    }
    if(ps2x.ButtonReleased(PSB_SQUARE)){              //will be TRUE if button was JUST released
      Serial.println("Square just released");     
      degree11--;
    }

    if(ps2x.Button(PSB_L1) || ps2x.Button(PSB_R1)) { //print stick values if either is TRUE
      Serial.print("Stick Values:");
      Serial.print(ps2x.Analog(PSS_LY), DEC); //Left stick, Y axis. Other options: LX, RY, RX  
      Serial.print(",");
      Serial.print(ps2x.Analog(PSS_LX), DEC); 
      Serial.print(",");
      Serial.print(ps2x.Analog(PSS_RY), DEC); 
      Serial.print(",");
      Serial.println(ps2x.Analog(PSS_RX), DEC); 
    }  

  if(degree1 <0){
    degree1 = 0; 
  }else if(degree1 > 180){
    degree1 = 180; 
  }
   if(degree2 <0){
    degree2 = 0; 
  }else if(degree2 > 180){
    degree2 = 180; 
  }
  if(degree11 <1){
    degree11 = 1; 
  }else if(degree11 > 10){
    degree11 = 10; 
  }
  if(degree21 <1){
    degree21 = 1; 
  }else if(degree21 > 10){
    degree21 = 10; 
  }
  myservo1.write(degree1);
  myservo2.write(degree2);
  delay(50); 
}