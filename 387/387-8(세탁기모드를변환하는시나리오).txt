#define NOCK_CLK 4
#define NOCK_DT 5
#define NOCK_SW 6

/*
(1)헹굼
(2)탈수
(3)아기빨래
(4)온수빨래
(5)번개빨래
(6)속옷빨래
(7)이불빨래
 */

byte ports[] = {7,8,9,10,11,12,13};
String mode[] = {
                 "헹굼",
                 "탈수",
                 "아기빨래",
                 "온수빨래",
                 "번개빨래",
                 "속옷빨래",
                 "이불빨래"
                 };

bool pre_sensorA = LOW;

int num = 0; //0~6

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //나 결과를 PC로 볼꺼야~
  pinMode(NOCK_CLK, INPUT);
  pinMode(NOCK_DT, INPUT);
  pinMode(NOCK_SW, INPUT_PULLUP);

  for(int i = 0;i<7;i++){
    pinMode(ports[i],OUTPUT);
  }

  digitalWrite(ports[0],HIGH);
}

void loop() {
  // put your main code here, to run repeatedly:
  if(digitalRead(NOCK_SW) == LOW){
    //버튼이 눌러졌다!
    //현재 로터리엔코더에 의해서 스위칭된 7개의 모드중에 하나가 실행된다
    int index = num/3;
    Serial.println(mode[index]+" 모드를 실행합니다..!");
    delay(300);
  }
  
  //1.지금 센서값을 확인해야하는 타이밍인가?
  //(=CLK핀에 상승에지가 발생했는가?)
  bool sensorA = digitalRead(NOCK_CLK);
  //여기서 할거하고~~
  if(pre_sensorA == HIGH && sensorA == LOW){
    //센서A의 Falling edge!
    //2.센서B의 상태를 가지고 와서 비교를 해본다!
    bool sensorB = digitalRead(NOCK_DT);
    if(sensorA != sensorB){
      //시계방향으로 회전하고 있구나~
      //Serial.println("시계방향");
      num++;
      if(num > 20) num = 20;
    }else{
      //반시계방향으로 회전하고 있구나~
      //Serial.println("반시계방향");
      num--;
      if(num < 0) num = 0;
    }

    int count = num/3;
    //LED가 상황에 맞게 제어되면 되겠다!
    for(int i = 0;i<7;i++){
      if(i == count){
        //현재 로터리엔코더에 의해 켜진 LED
        digitalWrite(ports[i],HIGH);
      }else{
        //그외 6개의 LED
        digitalWrite(ports[i],LOW);
      }
    }
    
  }


  pre_sensorA = sensorA;
  delay(1);
}
