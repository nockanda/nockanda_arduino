#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);

#define NOCK_CLK 4
#define NOCK_DT 5
#define NOCK_SW 6

bool pre_sensorA = LOW;

int num = 0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600); //나 결과를 PC로 볼꺼야~
  pinMode(NOCK_CLK, INPUT);
  pinMode(NOCK_DT, INPUT);
  pinMode(NOCK_SW, INPUT_PULLUP);
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0,0); //(0~15), (0~1)
  String text = "NUM=";
  text = text + String(num);

  while(text.length() < 16){
    text += " ";
  }
  lcd.print(text);
}

void loop() {
  // put your main code here, to run repeatedly:
  if(digitalRead(NOCK_SW) == LOW){
    //풀업방식이다!
    //아무것도 누르지 않았을때 HIGH 누르고있을때 LOW
    num = 0;
    lcd.setCursor(0,0); //(0~15), (0~1)
    String text = "NUM=";
    text = text + String(num);
  
    while(text.length() < 16){
      text += " ";
    }
    lcd.print(text);
  }

  
  //1.지금 센서값을 확인해야하는 타이밍인가?
  //(=CLK핀에 상승에지가 발생했는가?)
  bool sensorA = digitalRead(NOCK_CLK);
  //여기서 할거하고~~
  if(pre_sensorA == HIGH && sensorA == LOW){
    //센서A의 Falling edge!
    //2.센서B의 상태를 가지고 와서 비교를 해본다!
    bool sensorB = digitalRead(NOCK_DT);
    if(sensorA != sensorB){
      //시계방향으로 회전하고 있구나~
      //Serial.println("시계방향");
      num++;
    }else{
      //반시계방향으로 회전하고 있구나~
      //Serial.println("반시계방향");
      num--;
      
    }
    //Serial.println(num);
    lcd.setCursor(0,0); //(0~15), (0~1)
    String text = "NUM=";
    text = text + String(num);
    
    while(text.length() < 16){
      text += " ";
    }
    lcd.print(text);
  }


  pre_sensorA = sensorA;
  delay(1);
}
