esphome:
  name: nockanda

esp8266:
  board: esp01_1m

# Enable logging
logger:

globals:
   - id: my_global
     type: float
     restore_value: no
     initial_value: '0.0'

output:
  - platform: esp8266_pwm
    id: output_component1
    pin: 5

button:
  - platform: template
    name: "Set 0%"
    on_press:
      then:
        - output.set_level:
           id: output_component1
           level: 0%
        - lambda: |-
            id(my_global) = 0;
  - platform: template
    name: "Set 50%"
    on_press:
      then:
        - output.set_level:
           id: output_component1
           level: 50%
        - lambda: |-
            id(my_global) = 0.5;
  - platform: template
    name: "Set 100%"
    on_press:
      then:
        - output.set_level:
           id: output_component1
           level: 100%
        - lambda: |-
            id(my_global) = 1.0;

sensor:
  - platform: template
    name: "DC MOTOR POWER"
    lambda: |-
      return id(my_global);
    update_interval: 1s
  - platform: pulse_counter
    pin: 4
    name: "Motor RPM"
    unit_of_measurement: 'RPM'
    update_interval: 1s
  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_a: 14
    pin_b: 12
    #speed up
    on_clockwise:
      then:
        - lambda: |-
            if(id(my_global) < 1){
              id(my_global) += 0.1;
              id(output_component1).set_level(id(my_global));
            }
    #speed down
    on_anticlockwise:
      then:
        - lambda: |-
            if(id(my_global) > 0){
              id(my_global) -= 0.1;
              id(output_component1).set_level(id(my_global));
            }


# Enable Home Assistant API
api:

ota:
  password: "4de48bf22b324332a2421c7a316ecad8"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Nockanda Fallback Hotspot"
    password: "fVTDpvCSyniQ"

captive_portal:
    

