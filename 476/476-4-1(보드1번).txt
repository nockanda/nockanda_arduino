//10번보드의 코드

#include <ESP8266WiFi.h>
#include <espnow.h>

//byte board10[] = {0x34,0x94,0x54,0x62,0x6D,0x70}; //마스터
//byte board11[] = {0x40,0x91,0x51,0x4D,0xB5,0xCC}; //슬레이브1
//byte board12[] = {0x40,0x91,0x51,0x4E,0x34,0x3F}; //슬레이브2
//byte board13[] = {0x40,0x91,0x51,0x4D,0xDC,0x51}; //13

byte board[][6] = {
  {0x34,0x94,0x54,0x62,0x6D,0x70},
  {0x40,0x91,0x51,0x4D,0xB5,0xCC},
  {0x40,0x91,0x51,0x4E,0x34,0x3F},
  {0x40,0x91,0x51,0x4D,0xDC,0x51}
};

byte last_index = 2;
byte peer_index = 0;

unsigned long t = 0;

char data[] = "녹칸다의 유튜브 채널입니다!";

void setup() {
  // put your setup code here, to run once:

  Serial.begin(115200);
  
  WiFi.mode(WIFI_STA); //제일 처음 할일! 와이파이모드를 스테이션 모드로!

  //ESPNOW의 기능을 활성화한다!
  if (esp_now_init() != 0) {
    //ESP NOW 시작 실패!
    Serial.println("ESPNOW 실패!");
    return;
  }else{
     //ESP NOW 시작 성공!
     Serial.println("ESPNOW 성공!");
  }

  //지금 이보드의 역할은 주고 받는것을 다하겠다!
  esp_now_set_self_role(ESP_NOW_ROLE_COMBO);

  //나의 슬레이브를 등록해야겠다!
  esp_now_add_peer(board[1], ESP_NOW_ROLE_COMBO, 1, NULL, 0);//뒤에 2개는 ID, PW
  esp_now_add_peer(board[2], ESP_NOW_ROLE_COMBO, 1, NULL, 0);//뒤에 2개는 ID, PW

  //송신완료 콜백함수 등록
  esp_now_register_send_cb(OnDataSent);

  //수신완료 콜백 함수 등록
  esp_now_register_recv_cb(OnDataRecv);
}

void loop() {
  // put your main code here, to run repeatedly:
  
  if(Serial.available()){
    char c = Serial.read();

    //슬레이브1에게 먼저 전송한다~~~~!
    //그리고 전송에 실패하면 슬레이브 2에게 전송한다!
    peer_index = 1;
    Serial.println("메시지 전송을 시작합니다!");
    esp_now_send(board[peer_index], (uint8_t *) &data, sizeof(data));
  }
  
  /*
  if(millis() - t > 2000){
    t = millis();
    //2초마다 한번씩 하겠다!
    int num = random(1,3);
    esp_now_send(board[num], (uint8_t *) &data, sizeof(data));
  }
  */
}

//송신콜백함수 원형:
void OnDataSent(uint8_t *mac, uint8_t status) {
   //status가 0일때 송신 완료!
   if(status == 0){
      Serial.println("성공적으로 송신했음!");
   }else{
      Serial.println("송신 실패!!");
      //실패하면 다음노드에게 전송한다!
      peer_index++;
      if(peer_index >= last_index){
        //마지막 노드마저도 실패한경우
        Serial.println("마지막 노드입니다!");
      }else{
        Serial.println("다음 순번에게 전송합니다!");
        esp_now_send(board[peer_index], (uint8_t *) &data, sizeof(data));
      }
   }
}


//수신콜백함수 원형:
void OnDataRecv(uint8_t * mac, uint8_t * data, uint8_t len) {
  String text = "";
  for(int i = 0;i<len;i++){
    text += (char)data[i];
  }
  Serial.println(text);
}
